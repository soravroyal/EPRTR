<?xml version="1.0" encoding="utf-8"?>

<BaseWidget	xmlns:esri			="http://www.esri.com/2008/ags" 
			xmlns				="com.esri.solutions.flexviewer.*" 
			xmlns:mx			="http://www.adobe.com/2006/mxml" 
			xmlns:maplib		="com.esri.maplib.*"
			xmlns:maps			="com.google.maps.*"
			xmlns:widgets		="com.esri.solutions.flexviewer.widgets.*"			
			xmlns:Gazetteer     ="eu.europa.eea.widgets.Gazetteer.*"
			creationComplete="init()">
	
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			
			import com.esri.solutions.flexviewer.utils.WidgetEffects;
			
			[Bindable]
			private var zoomScale:Number = 50000;
			
			[Bindable]
			private var searchLabel:String;
			
			[Bindable]
			private var searchText:String;

			[Bindable]
			private var submitLabel:String;

			[Bindable]
			private var resultsLabel:String;

			[Bindable]
			private var selectionLabel:String;

			[Bindable]
			private var clearLabel:String;

			[Bindable]
			private var noresultsLabel:String;
			
			private function init():void
			{
				if (configXML)
				{	
					setText();			
					wTemplate.addTitlebarButton("com/esri/solutions/flexviewer/assets/images/icons/i_table.png", resultsLabel, showStateResults, "resultbtn");
					wTemplate.addTitlebarButton("com/esri/solutions/flexviewer/assets/images/icons/i_search.png", searchLabel, showStateSearch, "searchbtn");
					if (Number(configXML.zoomscale) > 0)
					{
						zoomScale = Number(configXML.zoomscale);
					}						
					searchComponent.init(this);
					resultsComponent.init(this);
				}
			}
			
			private function showStateSearch(event:MouseEvent=null):void
			{
				WidgetEffects.flipWidget(this, viewStack, "selectedIndex", 0, 400);
			}		
			private function showStateResults(event:MouseEvent=null):void
			{
				WidgetEffects.flipWidget(this, viewStack, "selectedIndex", 1, 400);
			}
			
			private function onLocationsFound(event:GazetteerLocationsFoundEvent):void
			{
				resultsComponent.addLocations(event.locations);
				showStateResults();
			}
			override public function updateLocale(value:String):void{
   				super.updateLocale(value);
			
   				//add specific print widget texts here    	
				setText();		
			}
			 private function setText():void{
				
				//title
				if(resourceManager.getString(widgetResourceFile, 'widgettitle'))wTemplate.setTitle(resourceManager.getString(widgetResourceFile, 'widgettitle'));
			
				//labels
				searchLabel = resourceManager.getString(widgetResourceFile, 'searchLabel') || "Search";
				searchText = resourceManager.getString(widgetResourceFile, 'searchText') || "Enter location";
				resultsLabel = resourceManager.getString(widgetResourceFile, 'resultsLabel') || "Results";
				noresultsLabel =resourceManager.getString(widgetResourceFile, 'noresultsLabel') || "No results found";
				clearLabel = resourceManager.getString(widgetResourceFile, 'clearLabel')|| "Clear results";
				submitLabel = resourceManager.getString(widgetResourceFile, 'submitLabel') || "Search";
				selectionLabel = resourceManager.getString(widgetResourceFile, 'selectionLabel') || "Search results";
				
				//buttons				
				if(wTemplate.titleBar.getChildByName("searchbtn"))Image(wTemplate.titleBar.getChildByName("searchbtn")).toolTip = searchLabel;
				if(wTemplate.titleBar.getChildByName("resultbtn"))Image(wTemplate.titleBar.getChildByName("resultbtn")).toolTip = resultsLabel;
				
			 }
			
		]]>
	</mx:Script>
	<mx:Metadata>
        [ResourceBundle("GazetteerWidgetStrings")]
    </mx:Metadata> 
	<WidgetTemplate id="wTemplate" >
	
		<mx:ViewStack id="viewStack" width="100%" height="100%" creationPolicy="all">
			<Gazetteer:GazetteerSearchComponent id="searchComponent" 
				locationsFound="onLocationsFound(event)" searchLabelText="{searchText}" noresultsLabel="{noresultsLabel}" submitLabel="{submitLabel}"/>
			<Gazetteer:GazetteerResultsComponent id="resultsComponent" zoomScale="{zoomScale}" clearLabel="{clearLabel}" selectionLabel="{selectionLabel}" />
		</mx:ViewStack>
	
	</WidgetTemplate>
	
</BaseWidget>

////////////////////////////////////////////////////////////////////////
//
// eprtrMapToEPRTRxml.cs
//
// This file was generated by MapForce 2008r2sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Data;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;
using Altova.Db;


using EPRTRxml; // application.libraries
using PollutantReleaseAndTransferReport; // application.libraries



namespace eprtr

{
	
	public class eprtrMapToEPRTRxml : Altova.TraceProvider 
	{
		private bool runDoesCloseAll = true;
		
		#region Members
		// documents
		
		// instances
		protected XmlNode	m_PollutantReleaseAndTransferReport2Instance;
		protected AutoNumberStateMap mAutoNumberStates;
		// members
		protected XmlNode m_var423_ReportingYear;
		protected long m_var424_ReportingYear_integer;
		protected long m_var426_ReportingYear_integer_long;
		protected XmlNode m_var427_CountryID;
		protected string m_var430_CountryID_string;
		protected XmlNode m_var431_CoordinateSystemID;
		protected string m_var434_CoordinateSystemID_string;
		protected XmlNode m_var435_RemarkText;
		protected string m_var438_RemarkText_string;
		protected XmlNode m_var441_Name;
		protected string m_var444_Name_string;
		protected XmlNode m_var445_ContactPersonName;
		protected string m_var448_ContactPersonName_string;
		protected XmlNode m_var451_CompleteNumberText;
		protected string m_var454_CompleteNumberText_string;
		protected XmlNode m_var457_CompleteNumberText;
		protected string m_var460_CompleteNumberText_string;
		protected XmlNode m_var463_EmailURIID;
		protected string m_var466_EmailURIID_string;
		protected XmlNode m_var469_StreetName;
		protected string m_var472_StreetName_string;
		protected XmlNode m_var473_BuildingNumber;
		protected string m_var476_BuildingNumber_string;
		protected XmlNode m_var477_CityName;
		protected string m_var480_CityName_string;
		protected XmlNode m_var481_PostcodeCode;
		protected string m_var484_PostcodeCode_string;
		protected XmlNode m_var485_CountryID;
		protected string m_var488_CountryID_string;
		protected XmlNode m_var491_NationalID;
		protected string m_var494_NationalID_string;
		protected XmlNode m_var495_ParentCompanyName;
		protected string m_var498_ParentCompanyName_string;
		protected XmlNode m_var499_FacilityName;
		protected string m_var502_FacilityName_string;
		protected XmlNode m_var503_RiverBasinDistrictID;
		protected string m_var506_RiverBasinDistrictID_string;
		protected XmlNode m_var507_NACEMainEconomicActivityCode;
		protected string m_var510_NACEMainEconomicActivityCode_string;
		protected XmlNode m_var511_MainEconomicActivityName;
		protected string m_var514_MainEconomicActivityName_string;
		protected XmlNode m_var515_CompetentAuthorityPartyName;
		protected string m_var518_CompetentAuthorityPartyName_string;
		protected XmlNode m_var519_TotalIPPCInstallationQuantity;
		protected ulong m_var520_TotalIPPCInstallationQuantity_nonNegativeInteger;
		protected int m_var522_TotalIPPCInstallationQuantity_nonNegativeInteger_int;
		protected XmlNode m_var523_OperationHours;
		protected ulong m_var524_OperationHours_nonNegativeInteger;
		protected int m_var526_OperationHours_nonNegativeInteger_int;
		protected XmlNode m_var527_TotalEmployeeQuantity;
		protected ulong m_var528_TotalEmployeeQuantity_nonNegativeInteger;
		protected int m_var530_TotalEmployeeQuantity_nonNegativeInteger_int;
		protected XmlNode m_var531_NutsRegionID;
		protected string m_var534_NutsRegionID_string;
		protected XmlNode m_var535_PublicInformation;
		protected string m_var538_PublicInformation_string;
		protected XmlNode m_var539_ConfidentialIndicator;
		protected bool m_var542_ConfidentialIndicator_boolean;
		protected XmlNode m_var543_ConfidentialCode;
		protected string m_var546_ConfidentialCode_string;
		protected XmlNode m_var547_ProtectVoluntaryData;
		protected bool m_var550_ProtectVoluntaryData_boolean;
		protected XmlNode m_var551_RemarkText;
		protected string m_var554_RemarkText_string;
		protected XmlNode m_var557_NationalID;
		protected string m_var560_NationalID_string;
		protected XmlNode m_var563_ReportingYear;
		protected long m_var564_ReportingYear_integer;
		protected long m_var566_ReportingYear_integer_long;
		protected XmlNode m_var569_LongitudeMeasure;
		protected double m_var570_LongitudeMeasure_float;
		protected double m_var572_LongitudeMeasure_float_double;
		protected XmlNode m_var575_LatitudeMeasure;
		protected double m_var576_LatitudeMeasure_float;
		protected double m_var578_LatitudeMeasure_float_double;
		protected XmlNode m_var581_ProductName;
		protected string m_var584_ProductName_string;
		protected XmlNode m_var587_Quantity;
		protected decimal m_var588_Quantity_decimal;
		protected double m_var590_Quantity_decimal_double;
		protected XmlNode m_var596_unitCode;
		protected string m_var599_unitCode_string;
		protected XmlNode m_var602_WebsiteURIID;
		protected string m_var605_WebsiteURIID_string;
		protected XmlNode m_var608_RankingNumeric;
		protected ulong m_var609_RankingNumeric_positiveInteger;
		protected long m_var611_RankingNumeric_positiveInteger_long;
		protected XmlNode m_var612_AnnexIActivityCode;
		protected string m_var615_AnnexIActivityCode_string;
		protected XmlNode m_var618_StreetName;
		protected string m_var621_StreetName_string;
		protected XmlNode m_var622_BuildingNumber;
		protected string m_var625_BuildingNumber_string;
		protected XmlNode m_var626_CityName;
		protected string m_var629_CityName_string;
		protected XmlNode m_var630_PostcodeCode;
		protected string m_var633_PostcodeCode_string;
		protected XmlNode m_var634_CountryID;
		protected string m_var637_CountryID_string;
		protected XmlNode m_var640_MediumCode;
		protected string m_var643_MediumCode_string;
		protected XmlNode m_var644_PollutantCode;
		protected string m_var647_PollutantCode_string;
		protected XmlNode m_var648_MethodBasisCode;
		protected string m_var651_MethodBasisCode_string;
		protected XmlNode m_var652_ConfidentialIndicator;
		protected bool m_var655_ConfidentialIndicator_boolean;
		protected XmlNode m_var656_ConfidentialCode;
		protected string m_var659_ConfidentialCode_string;
		protected XmlNode m_var660_RemarkText;
		protected string m_var663_RemarkText_string;
		protected XmlNode m_var664_TotalQuantity;
		protected decimal m_var665_TotalQuantity_decimal;
		protected double m_var667_TotalQuantity_decimal_double;
		protected XmlNode m_var671_unitCode;
		protected string m_var674_unitCode_string;
		protected XmlNode m_var675_AccidentalQuantity;
		protected decimal m_var676_AccidentalQuantity_decimal;
		protected double m_var678_AccidentalQuantity_decimal_double;
		protected XmlNode m_var682_unitCode;
		protected string m_var685_unitCode_string;
		protected XmlNode m_var688_MethodTypeCode;
		protected string m_var691_MethodTypeCode_string;
		protected XmlNode m_var692_Designation;
		protected string m_var695_Designation_string;
		protected XmlNode m_var698_PollutantCode;
		protected string m_var701_PollutantCode_string;
		protected XmlNode m_var702_MethodBasisCode;
		protected string m_var705_MethodBasisCode_string;
		protected XmlNode m_var706_ConfidentialIndicator;
		protected bool m_var709_ConfidentialIndicator_boolean;
		protected XmlNode m_var710_ConfidentialCode;
		protected string m_var713_ConfidentialCode_string;
		protected XmlNode m_var714_RemarkText;
		protected string m_var717_RemarkText_string;
		protected XmlNode m_var718_Quantity;
		protected decimal m_var719_Quantity_decimal;
		protected double m_var721_Quantity_decimal_double;
		protected XmlNode m_var725_unitCode;
		protected string m_var728_unitCode_string;
		protected XmlNode m_var731_MethodTypeCode;
		protected string m_var734_MethodTypeCode_string;
		protected XmlNode m_var735_Designation;
		protected string m_var738_Designation_string;
		protected XmlNode m_var741_WasteTypeCode;
		protected string m_var744_WasteTypeCode_string;
		protected XmlNode m_var745_WasteTreatmentCode;
		protected string m_var748_WasteTreatmentCode_string;
		protected XmlNode m_var749_MethodBasisCode;
		protected string m_var752_MethodBasisCode_string;
		protected XmlNode m_var753_ConfidentialIndicator;
		protected bool m_var756_ConfidentialIndicator_boolean;
		protected XmlNode m_var757_ConfidentialCode;
		protected string m_var760_ConfidentialCode_string;
		protected XmlNode m_var761_RemarkText;
		protected string m_var764_RemarkText_string;
		protected XmlNode m_var765_Quantity;
		protected decimal m_var766_Quantity_decimal;
		protected double m_var768_Quantity_decimal_double;
		protected XmlNode m_var772_unitCode;
		protected string m_var775_unitCode_string;
		protected XmlNode m_var778_Name;
		protected string m_var781_Name_string;
		protected XmlNode m_var786_StreetName;
		protected string m_var789_StreetName_string;
		protected XmlNode m_var790_BuildingNumber;
		protected string m_var793_BuildingNumber_string;
		protected XmlNode m_var794_CityName;
		protected string m_var797_CityName_string;
		protected XmlNode m_var798_PostcodeCode;
		protected string m_var801_PostcodeCode_string;
		protected XmlNode m_var802_CountryID;
		protected string m_var805_CountryID_string;
		protected XmlNode m_var810_StreetName;
		protected string m_var813_StreetName_string;
		protected XmlNode m_var814_BuildingNumber;
		protected string m_var817_BuildingNumber_string;
		protected XmlNode m_var818_CityName;
		protected string m_var821_CityName_string;
		protected XmlNode m_var822_PostcodeCode;
		protected string m_var825_PostcodeCode_string;
		protected XmlNode m_var826_CountryID;
		protected string m_var829_CountryID_string;
		protected XmlNode m_var832_MethodTypeCode;
		protected string m_var835_MethodTypeCode_string;
		protected XmlNode m_var836_Designation;
		protected string m_var839_Designation_string;
		Altova.Db.DbTreeOperations.TransactionHelper mTransactionHelper;
		#endregion //Members


		public void Run(String PollutantReleaseAndTransferReport2SourceFilename, string EPRTRxmlTargetConnectionString)
		{
		// open source streams
		WriteTrace("Loading " + PollutantReleaseAndTransferReport2SourceFilename + "...\n");
		Altova.IO.Input PollutantReleaseAndTransferReport2Source = new Altova.IO.FileInput(PollutantReleaseAndTransferReport2SourceFilename);

		// run
		Run(PollutantReleaseAndTransferReport2Source, EPRTRxmlTargetConnectionString);

		// close source streams
		PollutantReleaseAndTransferReport2Source.Stream.Close();
	}

		public void Run(Altova.IO.Input PollutantReleaseAndTransferReport2Source, string EPRTRxmlTargetConnectionString)
		{
			mAutoNumberStates = new AutoNumberStateMap();
			// Open the source(s)
			XmlDocument PollutantReleaseAndTransferReport2DocSourceObject = XmlTreeOperations.LoadDocument(PollutantReleaseAndTransferReport2Source);


			System.Collections.IEnumerator itPollutantReleaseAndTransferReport2 = XmlTreeOperations.GetElements(PollutantReleaseAndTransferReport2DocSourceObject, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_unnamedType_altova_PollutantReleaseAndTransferReport]).GetEnumerator();			
			if (!itPollutantReleaseAndTransferReport2.MoveNext())
				throw new Altova.Types.DataSourceUnavailableException("Source is of invalid type: " + PollutantReleaseAndTransferReport2Source);
			
			m_PollutantReleaseAndTransferReport2Instance = (System.Xml.XmlNode)itPollutantReleaseAndTransferReport2.Current;
			// Create the target
			WriteTrace("Connecting to EPRTRxml database...\n");
			System.Data.OleDb.OleDbConnection EPRTRxmlTargetObject = null;	
			try
			{		
				EPRTRxmlTargetObject = new System.Data.OleDb.OleDbConnection( EPRTRxmlTargetConnectionString );
				EPRTRxmlTargetObject.Open();
			}
			catch (Exception e)
			{
				throw new DataTargetUnavailableException("Error connecting to database.", e);
			}
			mTransactionHelper = new DbTreeOperations.TransactionHelper(EPRTRxmlTargetObject, "BEGIN TRANSACTION ", "COMMIT TRANSACTION ", "ROLLBACK TRANSACTION ", "SAVE TRANSACTION  %%TRANSACTION_NAME%% ", "ROLLBACK TRANSACTION  %%TRANSACTION_NAME%% ");

			// Execute mapping
			adddbo_PollutantReleaseAndTransferReport(m_PollutantReleaseAndTransferReport2Instance, EPRTRxmlTargetObject);

			// Close the target
			EPRTRxmlTargetObject.Close();

			// Close the Source Library
		
			if (runDoesCloseAll)
			{
			PollutantReleaseAndTransferReport2Source.Close();
			}
		}

public void adddbo_PollutantReleaseAndTransferReport(XmlNode src_PollutantReleaseAndTransferReport, System.Data.IDbConnection tgt_EPRTRxml)
{
	// Create "dbo.PollutantReleaseAndTransferReport"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_PollutantReleaseAndTransferReport = 
		Altova.Db.DbTreeOperations.AddElement(tgt_EPRTRxml, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_altova_EPRTRxml_altova_dbo_PollutantReleaseAndTransferReport]);
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopReportingYear(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
	loopCountryID(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
	loopCoordinateSystemID(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
	loopRemarkText(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[PollutantReleaseAndTransferReport] ([ReportingYear],[CountryID],[CoordinateSystemID],[RemarkText]) VALUES (?,?,?,?);  SELECT @@IDENTITY AS [PollutantReleaseAndTransferReportID]", true);
		command.AddParameter(new_dbo_PollutantReleaseAndTransferReport.Get("ReportingYear"));
		command.AddParameter(new_dbo_PollutantReleaseAndTransferReport.Get("CountryID"));
		command.AddParameter(new_dbo_PollutantReleaseAndTransferReport.Get("CoordinateSystemID"));
		command.AddParameter(new_dbo_PollutantReleaseAndTransferReport.Get("RemarkText"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_PollutantReleaseAndTransferReport.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopCompetentAuthorityParty(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
		loopFacilityReport(src_PollutantReleaseAndTransferReport, new_dbo_PollutantReleaseAndTransferReport);
	}
}

public void loopReportingYear(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "ReportingYear"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ReportingYear = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_ReportingYear]))
	{
		foreach (XmlNode cur_ReportingYear in en_ReportingYear)
		{
			m_var423_ReportingYear = cur_ReportingYear;
			m_var424_ReportingYear_integer = Altova.Xml.XmlTreeOperations.CastToInt64(m_var423_ReportingYear, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_ReportingYear]);
			m_var426_ReportingYear_integer_long = Altova.CoreTypes.CastToInt64(m_var424_ReportingYear_integer);
			addReportingYear(cur_ReportingYear, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void addReportingYear(XmlNode src_ReportingYear, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "ReportingYear"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_ReportingYear], Altova.CoreTypes.CastToInt64(m_var426_ReportingYear_integer_long));
}

public void loopCountryID(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "CountryID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CountryID = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_CountryID]))
	{
		foreach (XmlNode cur_CountryID in en_CountryID)
		{
			m_var427_CountryID = cur_CountryID;
			m_var430_CountryID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var427_CountryID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_CountryID]);
			addCountryID(cur_CountryID, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void addCountryID(XmlNode src_CountryID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "CountryID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_CountryID], Altova.CoreTypes.CastToString(m_var430_CountryID_string));
}

public void loopCoordinateSystemID(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "CoordinateSystemID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CoordinateSystemID = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_CoordinateSystemID]))
	{
		foreach (XmlNode cur_CoordinateSystemID in en_CoordinateSystemID)
		{
			m_var431_CoordinateSystemID = cur_CoordinateSystemID;
			m_var434_CoordinateSystemID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var431_CoordinateSystemID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_CoordinateSystemID]);
			addCoordinateSystemID(cur_CoordinateSystemID, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void addCoordinateSystemID(XmlNode src_CoordinateSystemID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "CoordinateSystemID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_CoordinateSystemID], Altova.CoreTypes.CastToString(m_var434_CoordinateSystemID_string));
}

public void loopRemarkText(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "RemarkText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RemarkText = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_RemarkText]))
	{
		foreach (XmlNode cur_RemarkText in en_RemarkText)
		{
			m_var435_RemarkText = cur_RemarkText;
			m_var438_RemarkText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var435_RemarkText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_RemarkText]);
			addRemarkText(cur_RemarkText, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void addRemarkText(XmlNode src_RemarkText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "RemarkText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_RemarkText], Altova.CoreTypes.CastToString(m_var438_RemarkText_string));
}

public void loopCompetentAuthorityParty(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "CompetentAuthorityParty"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CompetentAuthorityParty = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_CompetentAuthorityParty]))
	{
		foreach (XmlNode cur_CompetentAuthorityParty in en_CompetentAuthorityParty)
		{
			adddbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID(cur_CompetentAuthorityParty, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void adddbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "dbo.CompetentAuthorityParty|PollutantReleaseAndTransferReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_PollutantReleaseAndTransferReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_PollutantReleaseAndTransferReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopName(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	loopContactPersonName(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	loopTelephoneCommunication(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	loopFaxCommunication(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	loopEmailCommunication(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[CompetentAuthorityParty] ([PollutantReleaseAndTransferReportID],[Name],[ContactPersonName],[TelephoneCommunication],[FaxCommunication],[EmailCommunication]) VALUES (?,?,?,?,?,?);  S"
 + "ELECT @@IDENTITY AS [CompetentAuthorityPartyID]", true);
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("PollutantReleaseAndTransferReportID"));
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("Name"));
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("ContactPersonName"));
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("TelephoneCommunication"));
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("FaxCommunication"));
		command.AddParameter(new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Get("EmailCommunication"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopAddress(src_CompetentAuthorityParty, new_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
	}
}

public void loopName(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "Name"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Name = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_Name]))
	{
		foreach (XmlNode cur_Name in en_Name)
		{
			m_var441_Name = cur_Name;
			m_var444_Name_string = Altova.Xml.XmlTreeOperations.CastToString(m_var441_Name, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_Name]);
			addName(cur_Name, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addName(XmlNode src_Name, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "Name"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_Name], Altova.CoreTypes.CastToString(m_var444_Name_string));
}

public void loopContactPersonName(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "ContactPersonName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ContactPersonName = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_ContactPersonName]))
	{
		foreach (XmlNode cur_ContactPersonName in en_ContactPersonName)
		{
			m_var445_ContactPersonName = cur_ContactPersonName;
			m_var448_ContactPersonName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var445_ContactPersonName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_ContactPersonName]);
			addContactPersonName(cur_ContactPersonName, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addContactPersonName(XmlNode src_ContactPersonName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "ContactPersonName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_ContactPersonName], Altova.CoreTypes.CastToString(m_var448_ContactPersonName_string));
}

public void loopTelephoneCommunication(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "TelephoneCommunication"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_TelephoneCommunication = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_TelephoneCommunication]))
	{
		foreach (XmlNode cur_TelephoneCommunication in en_TelephoneCommunication)
		{
			loopCompleteNumberText(cur_TelephoneCommunication, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopCompleteNumberText(XmlNode src_TelephoneCommunication, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "CompleteNumberText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CompleteNumberText = Altova.Xml.XmlTreeOperations.GetElements(src_TelephoneCommunication, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_TelecommunicationCommunicationType_altova_CompleteNumberText]))
	{
		foreach (XmlNode cur_CompleteNumberText in en_CompleteNumberText)
		{
			m_var451_CompleteNumberText = cur_CompleteNumberText;
			m_var454_CompleteNumberText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var451_CompleteNumberText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_TelecommunicationCommunicationType_altova_CompleteNumberText]);
			addTelephoneCommunication(cur_CompleteNumberText, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addTelephoneCommunication(XmlNode src_CompleteNumberText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "TelephoneCommunication"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_TelephoneCommunication], Altova.CoreTypes.CastToString(m_var454_CompleteNumberText_string));
}

public void loopFaxCommunication(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "FaxCommunication"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_FaxCommunication = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_FaxCommunication]))
	{
		foreach (XmlNode cur_FaxCommunication in en_FaxCommunication)
		{
			loopCompleteNumberText2(cur_FaxCommunication, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopCompleteNumberText2(XmlNode src_FaxCommunication, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "CompleteNumberText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CompleteNumberText = Altova.Xml.XmlTreeOperations.GetElements(src_FaxCommunication, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_TelecommunicationCommunicationType_altova_CompleteNumberText]))
	{
		foreach (XmlNode cur_CompleteNumberText in en_CompleteNumberText)
		{
			m_var457_CompleteNumberText = cur_CompleteNumberText;
			m_var460_CompleteNumberText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var457_CompleteNumberText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_TelecommunicationCommunicationType_altova_CompleteNumberText]);
			addFaxCommunication(cur_CompleteNumberText, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addFaxCommunication(XmlNode src_CompleteNumberText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "FaxCommunication"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_FaxCommunication], Altova.CoreTypes.CastToString(m_var460_CompleteNumberText_string));
}

public void loopEmailCommunication(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "EmailCommunication"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_EmailCommunication = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_EmailCommunication]))
	{
		foreach (XmlNode cur_EmailCommunication in en_EmailCommunication)
		{
			loopEmailURIID(cur_EmailCommunication, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopEmailURIID(XmlNode src_EmailCommunication, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "EmailURIID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_EmailURIID = Altova.Xml.XmlTreeOperations.GetElements(src_EmailCommunication, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_EmailCommunicationType_altova_EmailURIID]))
	{
		foreach (XmlNode cur_EmailURIID in en_EmailURIID)
		{
			m_var463_EmailURIID = cur_EmailURIID;
			m_var466_EmailURIID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var463_EmailURIID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_EmailCommunicationType_altova_EmailURIID]);
			addEmailCommunication(cur_EmailURIID, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addEmailCommunication(XmlNode src_EmailURIID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "EmailCommunication"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_EmailCommunication], Altova.CoreTypes.CastToString(m_var466_EmailURIID_string));
}

public void loopAddress(XmlNode src_CompetentAuthorityParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// loop "Address"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Address = Altova.Xml.XmlTreeOperations.GetElements(src_CompetentAuthorityParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityPartyType_altova_Address]))
	{
		foreach (XmlNode cur_Address in en_Address)
		{
			adddbo_Address_Competent_CompetentAuthorityPartyID(cur_Address, tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_Address_Competent_CompetentAuthorityPartyID(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.Address_Competent|CompetentAuthorityPartyID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_Address_Competent_CompetentAuthorityPartyID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_dbo_Address_Competent_CompetentAuthorityPartyID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_CompetentAuthorityPartyID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_CompetentAuthorityParty_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_CompetentAuthorityParty_altova_CompetentAuthorityPartyID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopStreetName(src_Address, new_dbo_Address_Competent_CompetentAuthorityPartyID);
	loopBuildingNumber(src_Address, new_dbo_Address_Competent_CompetentAuthorityPartyID);
	loopCityName(src_Address, new_dbo_Address_Competent_CompetentAuthorityPartyID);
	loopPostcodeCode(src_Address, new_dbo_Address_Competent_CompetentAuthorityPartyID);
	loopCountryID2(src_Address, new_dbo_Address_Competent_CompetentAuthorityPartyID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[Address_Competent] ([CompetentAuthorityPartyID],[StreetName],[BuildingNumber],[CityName],[PostcodeCode],[CountryID]) VALUES (?,?,?,?,?,?);  SELECT @@IDENTITY AS [AddressID]", true);
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("CompetentAuthorityPartyID"));
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("StreetName"));
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("BuildingNumber"));
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("CityName"));
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("PostcodeCode"));
		command.AddParameter(new_dbo_Address_Competent_CompetentAuthorityPartyID.Get("CountryID"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_Address_Competent_CompetentAuthorityPartyID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopStreetName(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// loop "StreetName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_StreetName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_StreetName]))
	{
		foreach (XmlNode cur_StreetName in en_StreetName)
		{
			m_var469_StreetName = cur_StreetName;
			m_var472_StreetName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var469_StreetName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_StreetName]);
			addStreetName(cur_StreetName, tgt_dbo_Address_Competent_CompetentAuthorityPartyID);
		}
	}
}

public void addStreetName(XmlNode src_StreetName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// Create "StreetName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_StreetName], Altova.CoreTypes.CastToString(m_var472_StreetName_string));
}

public void loopBuildingNumber(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// loop "BuildingNumber"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_BuildingNumber = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_BuildingNumber]))
	{
		foreach (XmlNode cur_BuildingNumber in en_BuildingNumber)
		{
			m_var473_BuildingNumber = cur_BuildingNumber;
			m_var476_BuildingNumber_string = Altova.Xml.XmlTreeOperations.CastToString(m_var473_BuildingNumber, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_BuildingNumber]);
			addBuildingNumber(cur_BuildingNumber, tgt_dbo_Address_Competent_CompetentAuthorityPartyID);
		}
	}
}

public void addBuildingNumber(XmlNode src_BuildingNumber, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// Create "BuildingNumber"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_BuildingNumber], Altova.CoreTypes.CastToString(m_var476_BuildingNumber_string));
}

public void loopCityName(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// loop "CityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CityName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_CityName]))
	{
		foreach (XmlNode cur_CityName in en_CityName)
		{
			m_var477_CityName = cur_CityName;
			m_var480_CityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var477_CityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_CityName]);
			addCityName(cur_CityName, tgt_dbo_Address_Competent_CompetentAuthorityPartyID);
		}
	}
}

public void addCityName(XmlNode src_CityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// Create "CityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_CityName], Altova.CoreTypes.CastToString(m_var480_CityName_string));
}

public void loopPostcodeCode(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// loop "PostcodeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PostcodeCode = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_PostcodeCode]))
	{
		foreach (XmlNode cur_PostcodeCode in en_PostcodeCode)
		{
			m_var481_PostcodeCode = cur_PostcodeCode;
			m_var484_PostcodeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var481_PostcodeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_PostcodeCode]);
			addPostcodeCode(cur_PostcodeCode, tgt_dbo_Address_Competent_CompetentAuthorityPartyID);
		}
	}
}

public void addPostcodeCode(XmlNode src_PostcodeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// Create "PostcodeCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_PostcodeCode], Altova.CoreTypes.CastToString(m_var484_PostcodeCode_string));
}

public void loopCountryID2(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// loop "CountryID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CountryID = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_CountryID]))
	{
		foreach (XmlNode cur_CountryID in en_CountryID)
		{
			m_var485_CountryID = cur_CountryID;
			m_var488_CountryID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var485_CountryID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_CompetentAuthorityAddressType_altova_CountryID]);
			addCountryID2(cur_CountryID, tgt_dbo_Address_Competent_CompetentAuthorityPartyID);
		}
	}
}

public void addCountryID2(XmlNode src_CountryID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Competent_CompetentAuthorityPartyID)
{
	// Create "CountryID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Competent_CompetentAuthorityPartyID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Competent_altova_CountryID], Altova.CoreTypes.CastToString(m_var488_CountryID_string));
}

public void loopFacilityReport(XmlNode src_PollutantReleaseAndTransferReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// loop "FacilityReport"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_FacilityReport = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantReleaseAndTransferReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseAndTransferReportType_altova_FacilityReport]))
	{
		foreach (XmlNode cur_FacilityReport in en_FacilityReport)
		{
			adddbo_FacilityReport_PollutantReleaseAndTransferReportID(cur_FacilityReport, tgt_dbo_PollutantReleaseAndTransferReport);
		}
	}
}

public void adddbo_FacilityReport_PollutantReleaseAndTransferReportID(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantReleaseAndTransferReport)
{
	// Create "dbo.FacilityReport|PollutantReleaseAndTransferReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_FacilityReport_PollutantReleaseAndTransferReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_dbo_FacilityReport_PollutantReleaseAndTransferReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_PollutantReleaseAndTransferReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_PollutantReleaseAndTransferReport, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantReleaseAndTransferReport_altova_PollutantReleaseAndTransferReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopNationalID(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopParentCompanyName(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopFacilityName(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopRiverBasinDistrictID(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopNACEMainEconomicActivityCode(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopMainEconomicActivityName(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopCompetentAuthorityPartyName(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopTotalIPPCInstallationQuantity(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopOperationHours(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopTotalEmployeeQuantity(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopNutsRegionID(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopPublicInformation(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopConfidentialIndicator(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopConfidentialCode(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopProtectVoluntaryData(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopRemarkText2(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopPreviousNationalID(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopPreviousNationalID2(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopGeographicalCoordinate(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopGeographicalCoordinate2(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopProductionVolume(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopProductionVolume2(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopProductionVolume3(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	loopWebsiteCommunication(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[FacilityReport] ([PollutantReleaseAndTransferReportID],[NationalID],[ParentCompanyName],[FacilityName],[RiverBasinDistrictID],[NACEMainEconomicActivityCode],[MainEconomicActivityNam"
 + "e],[CompetentAuthorityName],[TotalIPPCInstallationQuantity],[OperationHours],[TotalEmployeeQuantity],[NutsRegionID],[PublicInformation],[ConfidentialIndicator],[ConfidentialCode],[ProtectVoluntaryData"
 + "],[RemarkText],[PrevNationalID],[PrevReportingYear],[LongitudeMeasure],[LatitudeMeasure],[ProductName],[Quantity],[QuantityUnitCode],[WebsiteCommunication]) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?"
 + ",?,?,?,?,?,?,?);  SELECT @@IDENTITY AS [FacilityReportID]", true);
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("PollutantReleaseAndTransferReportID"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("NationalID"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("ParentCompanyName"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("FacilityName"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("RiverBasinDistrictID"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("NACEMainEconomicActivityCode"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("MainEconomicActivityName"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("CompetentAuthorityName"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("TotalIPPCInstallationQuantity"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("OperationHours"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("TotalEmployeeQuantity"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("NutsRegionID"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("PublicInformation"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("ConfidentialIndicator"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("ConfidentialCode"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("ProtectVoluntaryData"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("RemarkText"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("PrevNationalID"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("PrevReportingYear"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("LongitudeMeasure"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("LatitudeMeasure"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("ProductName"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("Quantity"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("QuantityUnitCode"));
		command.AddParameter(new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Get("WebsiteCommunication"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_FacilityReport_PollutantReleaseAndTransferReportID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopActivity(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		loopAddress2(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		loopPollutantRelease(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		loopPollutantTransfer(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		loopWasteTransfer(src_FacilityReport, new_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	}
}

public void loopNationalID(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "NationalID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_NationalID = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NationalID]))
	{
		foreach (XmlNode cur_NationalID in en_NationalID)
		{
			m_var491_NationalID = cur_NationalID;
			m_var494_NationalID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var491_NationalID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NationalID]);
			addNationalID(cur_NationalID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addNationalID(XmlNode src_NationalID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "NationalID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_NationalID], Altova.CoreTypes.CastToString(m_var494_NationalID_string));
}

public void loopParentCompanyName(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ParentCompanyName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ParentCompanyName = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ParentCompanyName]))
	{
		foreach (XmlNode cur_ParentCompanyName in en_ParentCompanyName)
		{
			m_var495_ParentCompanyName = cur_ParentCompanyName;
			m_var498_ParentCompanyName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var495_ParentCompanyName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ParentCompanyName]);
			addParentCompanyName(cur_ParentCompanyName, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addParentCompanyName(XmlNode src_ParentCompanyName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "ParentCompanyName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_ParentCompanyName], Altova.CoreTypes.CastToString(m_var498_ParentCompanyName_string));
}

public void loopFacilityName(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "FacilityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_FacilityName = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_FacilityName]))
	{
		foreach (XmlNode cur_FacilityName in en_FacilityName)
		{
			m_var499_FacilityName = cur_FacilityName;
			m_var502_FacilityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var499_FacilityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_FacilityName]);
			addFacilityName(cur_FacilityName, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addFacilityName(XmlNode src_FacilityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "FacilityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityName], Altova.CoreTypes.CastToString(m_var502_FacilityName_string));
}

public void loopRiverBasinDistrictID(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "RiverBasinDistrictID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RiverBasinDistrictID = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_RiverBasinDistrictID]))
	{
		foreach (XmlNode cur_RiverBasinDistrictID in en_RiverBasinDistrictID)
		{
			m_var503_RiverBasinDistrictID = cur_RiverBasinDistrictID;
			m_var506_RiverBasinDistrictID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var503_RiverBasinDistrictID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_RiverBasinDistrictID]);
			addRiverBasinDistrictID(cur_RiverBasinDistrictID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addRiverBasinDistrictID(XmlNode src_RiverBasinDistrictID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "RiverBasinDistrictID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_RiverBasinDistrictID], Altova.CoreTypes.CastToString(m_var506_RiverBasinDistrictID_string));
}

public void loopNACEMainEconomicActivityCode(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "NACEMainEconomicActivityCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_NACEMainEconomicActivityCode = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NACEMainEconomicActivityCode]))
	{
		foreach (XmlNode cur_NACEMainEconomicActivityCode in en_NACEMainEconomicActivityCode)
		{
			m_var507_NACEMainEconomicActivityCode = cur_NACEMainEconomicActivityCode;
			m_var510_NACEMainEconomicActivityCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var507_NACEMainEconomicActivityCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NACEMainEconomicActivityCode]);
			addNACEMainEconomicActivityCode(cur_NACEMainEconomicActivityCode, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addNACEMainEconomicActivityCode(XmlNode src_NACEMainEconomicActivityCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "NACEMainEconomicActivityCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_NACEMainEconomicActivityCode], Altova.CoreTypes.CastToString(m_var510_NACEMainEconomicActivityCode_string));
}

public void loopMainEconomicActivityName(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "MainEconomicActivityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MainEconomicActivityName = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_MainEconomicActivityName]))
	{
		foreach (XmlNode cur_MainEconomicActivityName in en_MainEconomicActivityName)
		{
			m_var511_MainEconomicActivityName = cur_MainEconomicActivityName;
			m_var514_MainEconomicActivityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var511_MainEconomicActivityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_MainEconomicActivityName]);
			addMainEconomicActivityName(cur_MainEconomicActivityName, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addMainEconomicActivityName(XmlNode src_MainEconomicActivityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "MainEconomicActivityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_MainEconomicActivityName], Altova.CoreTypes.CastToString(m_var514_MainEconomicActivityName_string));
}

public void loopCompetentAuthorityPartyName(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "CompetentAuthorityPartyName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CompetentAuthorityPartyName = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_CompetentAuthorityPartyName]))
	{
		foreach (XmlNode cur_CompetentAuthorityPartyName in en_CompetentAuthorityPartyName)
		{
			m_var515_CompetentAuthorityPartyName = cur_CompetentAuthorityPartyName;
			m_var518_CompetentAuthorityPartyName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var515_CompetentAuthorityPartyName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_CompetentAuthorityPartyName]);
			addCompetentAuthorityName(cur_CompetentAuthorityPartyName, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addCompetentAuthorityName(XmlNode src_CompetentAuthorityPartyName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "CompetentAuthorityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_CompetentAuthorityName], Altova.CoreTypes.CastToString(m_var518_CompetentAuthorityPartyName_string));
}

public void loopTotalIPPCInstallationQuantity(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "TotalIPPCInstallationQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_TotalIPPCInstallationQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_TotalIPPCInstallationQuantity]))
	{
		foreach (XmlNode cur_TotalIPPCInstallationQuantity in en_TotalIPPCInstallationQuantity)
		{
			m_var519_TotalIPPCInstallationQuantity = cur_TotalIPPCInstallationQuantity;
			m_var520_TotalIPPCInstallationQuantity_nonNegativeInteger = Altova.Xml.XmlTreeOperations.CastToUInt64(m_var519_TotalIPPCInstallationQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_TotalIPPCInstallationQuantity]);
			m_var522_TotalIPPCInstallationQuantity_nonNegativeInteger_int = Altova.CoreTypes.CastToInt(m_var520_TotalIPPCInstallationQuantity_nonNegativeInteger);
			addTotalIPPCInstallationQuantity(cur_TotalIPPCInstallationQuantity, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addTotalIPPCInstallationQuantity(XmlNode src_TotalIPPCInstallationQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "TotalIPPCInstallationQuantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_TotalIPPCInstallationQuantity], Altova.CoreTypes.CastToInt(m_var522_TotalIPPCInstallationQuantity_nonNegativeInteger_int));
}

public void loopOperationHours(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "OperationHours"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_OperationHours = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_OperationHours]))
	{
		foreach (XmlNode cur_OperationHours in en_OperationHours)
		{
			m_var523_OperationHours = cur_OperationHours;
			m_var524_OperationHours_nonNegativeInteger = Altova.Xml.XmlTreeOperations.CastToUInt64(m_var523_OperationHours, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_OperationHours]);
			m_var526_OperationHours_nonNegativeInteger_int = Altova.CoreTypes.CastToInt(m_var524_OperationHours_nonNegativeInteger);
			addOperationHours(cur_OperationHours, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addOperationHours(XmlNode src_OperationHours, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "OperationHours"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_OperationHours], Altova.CoreTypes.CastToInt(m_var526_OperationHours_nonNegativeInteger_int));
}

public void loopTotalEmployeeQuantity(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "TotalEmployeeQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_TotalEmployeeQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_TotalEmployeeQuantity]))
	{
		foreach (XmlNode cur_TotalEmployeeQuantity in en_TotalEmployeeQuantity)
		{
			m_var527_TotalEmployeeQuantity = cur_TotalEmployeeQuantity;
			m_var528_TotalEmployeeQuantity_nonNegativeInteger = Altova.Xml.XmlTreeOperations.CastToUInt64(m_var527_TotalEmployeeQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_TotalEmployeeQuantity]);
			m_var530_TotalEmployeeQuantity_nonNegativeInteger_int = Altova.CoreTypes.CastToInt(m_var528_TotalEmployeeQuantity_nonNegativeInteger);
			addTotalEmployeeQuantity(cur_TotalEmployeeQuantity, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addTotalEmployeeQuantity(XmlNode src_TotalEmployeeQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "TotalEmployeeQuantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_TotalEmployeeQuantity], Altova.CoreTypes.CastToInt(m_var530_TotalEmployeeQuantity_nonNegativeInteger_int));
}

public void loopNutsRegionID(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "NutsRegionID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_NutsRegionID = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NutsRegionID]))
	{
		foreach (XmlNode cur_NutsRegionID in en_NutsRegionID)
		{
			m_var531_NutsRegionID = cur_NutsRegionID;
			m_var534_NutsRegionID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var531_NutsRegionID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_NutsRegionID]);
			addNutsRegionID(cur_NutsRegionID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addNutsRegionID(XmlNode src_NutsRegionID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "NutsRegionID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_NutsRegionID], Altova.CoreTypes.CastToString(m_var534_NutsRegionID_string));
}

public void loopPublicInformation(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "PublicInformation"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PublicInformation = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PublicInformation]))
	{
		foreach (XmlNode cur_PublicInformation in en_PublicInformation)
		{
			m_var535_PublicInformation = cur_PublicInformation;
			m_var538_PublicInformation_string = Altova.Xml.XmlTreeOperations.CastToString(m_var535_PublicInformation, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PublicInformation]);
			addPublicInformation(cur_PublicInformation, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addPublicInformation(XmlNode src_PublicInformation, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "PublicInformation"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_PublicInformation], Altova.CoreTypes.CastToString(m_var538_PublicInformation_string));
}

public void loopConfidentialIndicator(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ConfidentialIndicator"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialIndicator = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ConfidentialIndicator]))
	{
		foreach (XmlNode cur_ConfidentialIndicator in en_ConfidentialIndicator)
		{
			m_var539_ConfidentialIndicator = cur_ConfidentialIndicator;
			m_var542_ConfidentialIndicator_boolean = Altova.Xml.XmlTreeOperations.CastToBool(m_var539_ConfidentialIndicator, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ConfidentialIndicator]);
			addConfidentialIndicator(cur_ConfidentialIndicator, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addConfidentialIndicator(XmlNode src_ConfidentialIndicator, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "ConfidentialIndicator"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_ConfidentialIndicator], Altova.CoreTypes.CastToBool(m_var542_ConfidentialIndicator_boolean));
}

public void loopConfidentialCode(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ConfidentialCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialCode = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ConfidentialCode]))
	{
		foreach (XmlNode cur_ConfidentialCode in en_ConfidentialCode)
		{
			m_var543_ConfidentialCode = cur_ConfidentialCode;
			m_var546_ConfidentialCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var543_ConfidentialCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ConfidentialCode]);
			addConfidentialCode(cur_ConfidentialCode, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addConfidentialCode(XmlNode src_ConfidentialCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "ConfidentialCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_ConfidentialCode], Altova.CoreTypes.CastToString(m_var546_ConfidentialCode_string));
}

public void loopProtectVoluntaryData(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ProtectVoluntaryData"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ProtectVoluntaryData = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ProtectVoluntaryData]))
	{
		foreach (XmlNode cur_ProtectVoluntaryData in en_ProtectVoluntaryData)
		{
			m_var547_ProtectVoluntaryData = cur_ProtectVoluntaryData;
			m_var550_ProtectVoluntaryData_boolean = Altova.Xml.XmlTreeOperations.CastToBool(m_var547_ProtectVoluntaryData, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ProtectVoluntaryData]);
			addProtectVoluntaryData(cur_ProtectVoluntaryData, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addProtectVoluntaryData(XmlNode src_ProtectVoluntaryData, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "ProtectVoluntaryData"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_ProtectVoluntaryData], Altova.CoreTypes.CastToBool(m_var550_ProtectVoluntaryData_boolean));
}

public void loopRemarkText2(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "RemarkText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RemarkText = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_RemarkText]))
	{
		foreach (XmlNode cur_RemarkText in en_RemarkText)
		{
			m_var551_RemarkText = cur_RemarkText;
			m_var554_RemarkText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var551_RemarkText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_RemarkText]);
			addRemarkText2(cur_RemarkText, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addRemarkText2(XmlNode src_RemarkText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "RemarkText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_RemarkText], Altova.CoreTypes.CastToString(m_var554_RemarkText_string));
}

public void loopPreviousNationalID(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "PreviousNationalID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PreviousNationalID = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PreviousNationalID]))
	{
		foreach (XmlNode cur_PreviousNationalID in en_PreviousNationalID)
		{
			loopNationalID2(cur_PreviousNationalID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopNationalID2(XmlNode src_PreviousNationalID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "NationalID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_NationalID = Altova.Xml.XmlTreeOperations.GetElements(src_PreviousNationalID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PreviousNationalIDType_altova_NationalID]))
	{
		foreach (XmlNode cur_NationalID in en_NationalID)
		{
			m_var557_NationalID = cur_NationalID;
			m_var560_NationalID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var557_NationalID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PreviousNationalIDType_altova_NationalID]);
			addPrevNationalID(cur_NationalID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addPrevNationalID(XmlNode src_NationalID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "PrevNationalID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_PrevNationalID], Altova.CoreTypes.CastToString(m_var560_NationalID_string));
}

public void loopPreviousNationalID2(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "PreviousNationalID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PreviousNationalID = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PreviousNationalID]))
	{
		foreach (XmlNode cur_PreviousNationalID in en_PreviousNationalID)
		{
			loopReportingYear2(cur_PreviousNationalID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopReportingYear2(XmlNode src_PreviousNationalID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ReportingYear"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ReportingYear = Altova.Xml.XmlTreeOperations.GetElements(src_PreviousNationalID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PreviousNationalIDType_altova_ReportingYear]))
	{
		foreach (XmlNode cur_ReportingYear in en_ReportingYear)
		{
			m_var563_ReportingYear = cur_ReportingYear;
			m_var564_ReportingYear_integer = Altova.Xml.XmlTreeOperations.CastToInt64(m_var563_ReportingYear, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PreviousNationalIDType_altova_ReportingYear]);
			m_var566_ReportingYear_integer_long = Altova.CoreTypes.CastToInt64(m_var564_ReportingYear_integer);
			addPrevReportingYear(cur_ReportingYear, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addPrevReportingYear(XmlNode src_ReportingYear, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "PrevReportingYear"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_PrevReportingYear], Altova.CoreTypes.CastToInt64(m_var566_ReportingYear_integer_long));
}

public void loopGeographicalCoordinate(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "GeographicalCoordinate"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_GeographicalCoordinate = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_GeographicalCoordinate]))
	{
		foreach (XmlNode cur_GeographicalCoordinate in en_GeographicalCoordinate)
		{
			loopLongitudeMeasure(cur_GeographicalCoordinate, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopLongitudeMeasure(XmlNode src_GeographicalCoordinate, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "LongitudeMeasure"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_LongitudeMeasure = Altova.Xml.XmlTreeOperations.GetElements(src_GeographicalCoordinate, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_GeographicalCoordinateType_altova_LongitudeMeasure]))
	{
		foreach (XmlNode cur_LongitudeMeasure in en_LongitudeMeasure)
		{
			m_var569_LongitudeMeasure = cur_LongitudeMeasure;
			m_var570_LongitudeMeasure_float = Altova.Xml.XmlTreeOperations.CastToDouble(m_var569_LongitudeMeasure, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_GeographicalCoordinateType_altova_LongitudeMeasure]);
			m_var572_LongitudeMeasure_float_double = Altova.CoreTypes.CastToDouble(m_var570_LongitudeMeasure_float);
			addLongitudeMeasure(cur_LongitudeMeasure, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addLongitudeMeasure(XmlNode src_LongitudeMeasure, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "LongitudeMeasure"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_LongitudeMeasure], Altova.CoreTypes.CastToDouble(m_var572_LongitudeMeasure_float_double));
}

public void loopGeographicalCoordinate2(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "GeographicalCoordinate"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_GeographicalCoordinate = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_GeographicalCoordinate]))
	{
		foreach (XmlNode cur_GeographicalCoordinate in en_GeographicalCoordinate)
		{
			loopLatitudeMeasure(cur_GeographicalCoordinate, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopLatitudeMeasure(XmlNode src_GeographicalCoordinate, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "LatitudeMeasure"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_LatitudeMeasure = Altova.Xml.XmlTreeOperations.GetElements(src_GeographicalCoordinate, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_GeographicalCoordinateType_altova_LatitudeMeasure]))
	{
		foreach (XmlNode cur_LatitudeMeasure in en_LatitudeMeasure)
		{
			m_var575_LatitudeMeasure = cur_LatitudeMeasure;
			m_var576_LatitudeMeasure_float = Altova.Xml.XmlTreeOperations.CastToDouble(m_var575_LatitudeMeasure, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_GeographicalCoordinateType_altova_LatitudeMeasure]);
			m_var578_LatitudeMeasure_float_double = Altova.CoreTypes.CastToDouble(m_var576_LatitudeMeasure_float);
			addLatitudeMeasure(cur_LatitudeMeasure, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addLatitudeMeasure(XmlNode src_LatitudeMeasure, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "LatitudeMeasure"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_LatitudeMeasure], Altova.CoreTypes.CastToDouble(m_var578_LatitudeMeasure_float_double));
}

public void loopProductionVolume(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ProductionVolume"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ProductionVolume = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ProductionVolume]))
	{
		foreach (XmlNode cur_ProductionVolume in en_ProductionVolume)
		{
			loopProductName(cur_ProductionVolume, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopProductName(XmlNode src_ProductionVolume, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ProductName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ProductName = Altova.Xml.XmlTreeOperations.GetElements(src_ProductionVolume, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeType_altova_ProductName]))
	{
		foreach (XmlNode cur_ProductName in en_ProductName)
		{
			m_var581_ProductName = cur_ProductName;
			m_var584_ProductName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var581_ProductName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeType_altova_ProductName]);
			addProductName(cur_ProductName, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addProductName(XmlNode src_ProductName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "ProductName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_ProductName], Altova.CoreTypes.CastToString(m_var584_ProductName_string));
}

public void loopProductionVolume2(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ProductionVolume"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ProductionVolume = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ProductionVolume]))
	{
		foreach (XmlNode cur_ProductionVolume in en_ProductionVolume)
		{
			loopQuantity(cur_ProductionVolume, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopQuantity(XmlNode src_ProductionVolume, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_ProductionVolume, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			m_var587_Quantity = cur_Quantity;
			m_var588_Quantity_decimal = Altova.Xml.XmlTreeOperations.CastToDecimal(m_var587_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeType_altova_Quantity]);
			m_var590_Quantity_decimal_double = Altova.CoreTypes.CastToDouble(m_var588_Quantity_decimal);
			addQuantity(cur_Quantity, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addQuantity(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "Quantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_Quantity], Altova.CoreTypes.CastToDouble(m_var590_Quantity_decimal_double));
}

public void loopProductionVolume3(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "ProductionVolume"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ProductionVolume = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_ProductionVolume]))
	{
		foreach (XmlNode cur_ProductionVolume in en_ProductionVolume)
		{
			loopQuantity2(cur_ProductionVolume, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopQuantity2(XmlNode src_ProductionVolume, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_ProductionVolume, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			loopunitCode(cur_Quantity, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopunitCode(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "unitCode"
	XmlNode cur_unitCode = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeQuantityType_altova_unitCode]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_unitCode))
	{
		m_var596_unitCode = cur_unitCode;
		m_var599_unitCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var596_unitCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ProductionVolumeQuantityType_altova_unitCode]);
		addQuantityUnitCode(cur_unitCode, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
	}
}

public void addQuantityUnitCode(XmlNode src_unitCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "QuantityUnitCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_QuantityUnitCode], Altova.CoreTypes.CastToString(m_var599_unitCode_string));
}

public void loopWebsiteCommunication(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "WebsiteCommunication"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WebsiteCommunication = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_WebsiteCommunication]))
	{
		foreach (XmlNode cur_WebsiteCommunication in en_WebsiteCommunication)
		{
			loopWebsiteURIID(cur_WebsiteCommunication, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void loopWebsiteURIID(XmlNode src_WebsiteCommunication, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "WebsiteURIID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WebsiteURIID = Altova.Xml.XmlTreeOperations.GetElements(src_WebsiteCommunication, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WebsiteCommunicationType_altova_WebsiteURIID]))
	{
		foreach (XmlNode cur_WebsiteURIID in en_WebsiteURIID)
		{
			m_var602_WebsiteURIID = cur_WebsiteURIID;
			m_var605_WebsiteURIID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var602_WebsiteURIID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WebsiteCommunicationType_altova_WebsiteURIID]);
			addWebsiteCommunication(cur_WebsiteURIID, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void addWebsiteCommunication(XmlNode src_WebsiteURIID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "WebsiteCommunication"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_WebsiteCommunication], Altova.CoreTypes.CastToString(m_var605_WebsiteURIID_string));
}

public void loopActivity(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "Activity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Activity = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_Activity]))
	{
		foreach (XmlNode cur_Activity in en_Activity)
		{
			adddbo_Activity_FacilityReportID(cur_Activity, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_Activity_FacilityReportID(XmlNode src_Activity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.Activity|FacilityReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_Activity_FacilityReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_dbo_Activity_FacilityReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_Activity_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Activity_altova_FacilityReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopRankingNumeric(src_Activity, new_dbo_Activity_FacilityReportID);
	loopAnnexIActivityCode(src_Activity, new_dbo_Activity_FacilityReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[Activity] ([FacilityReportID],[RankingNumeric],[AnnexIActivityCode]) VALUES (?,?,?)", false);
		command.AddParameter(new_dbo_Activity_FacilityReportID.Get("FacilityReportID"));
		command.AddParameter(new_dbo_Activity_FacilityReportID.Get("RankingNumeric"));
		command.AddParameter(new_dbo_Activity_FacilityReportID.Get("AnnexIActivityCode"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_Activity_FacilityReportID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopRankingNumeric(XmlNode src_Activity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Activity_FacilityReportID)
{
	// loop "RankingNumeric"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RankingNumeric = Altova.Xml.XmlTreeOperations.GetElements(src_Activity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ActivityType_altova_RankingNumeric]))
	{
		foreach (XmlNode cur_RankingNumeric in en_RankingNumeric)
		{
			m_var608_RankingNumeric = cur_RankingNumeric;
			m_var609_RankingNumeric_positiveInteger = Altova.Xml.XmlTreeOperations.CastToUInt64(m_var608_RankingNumeric, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ActivityType_altova_RankingNumeric]);
			m_var611_RankingNumeric_positiveInteger_long = Altova.CoreTypes.CastToInt64(m_var609_RankingNumeric_positiveInteger);
			addRankingNumeric(cur_RankingNumeric, tgt_dbo_Activity_FacilityReportID);
		}
	}
}

public void addRankingNumeric(XmlNode src_RankingNumeric, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Activity_FacilityReportID)
{
	// Create "RankingNumeric"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Activity_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Activity_altova_RankingNumeric], Altova.CoreTypes.CastToInt64(m_var611_RankingNumeric_positiveInteger_long));
}

public void loopAnnexIActivityCode(XmlNode src_Activity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Activity_FacilityReportID)
{
	// loop "AnnexIActivityCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_AnnexIActivityCode = Altova.Xml.XmlTreeOperations.GetElements(src_Activity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ActivityType_altova_AnnexIActivityCode]))
	{
		foreach (XmlNode cur_AnnexIActivityCode in en_AnnexIActivityCode)
		{
			m_var612_AnnexIActivityCode = cur_AnnexIActivityCode;
			m_var615_AnnexIActivityCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var612_AnnexIActivityCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_ActivityType_altova_AnnexIActivityCode]);
			addAnnexIActivityCode(cur_AnnexIActivityCode, tgt_dbo_Activity_FacilityReportID);
		}
	}
}

public void addAnnexIActivityCode(XmlNode src_AnnexIActivityCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Activity_FacilityReportID)
{
	// Create "AnnexIActivityCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Activity_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Activity_altova_AnnexIActivityCode], Altova.CoreTypes.CastToString(m_var615_AnnexIActivityCode_string));
}

public void loopAddress2(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "Address"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Address = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_Address]))
	{
		foreach (XmlNode cur_Address in en_Address)
		{
			adddbo_Address_Facility_FacilityReportID(cur_Address, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_Address_Facility_FacilityReportID(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.Address_Facility|FacilityReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_Address_Facility_FacilityReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_dbo_Address_Facility_FacilityReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_FacilityReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopStreetName2(src_Address, new_dbo_Address_Facility_FacilityReportID);
	loopBuildingNumber2(src_Address, new_dbo_Address_Facility_FacilityReportID);
	loopCityName2(src_Address, new_dbo_Address_Facility_FacilityReportID);
	loopPostcodeCode2(src_Address, new_dbo_Address_Facility_FacilityReportID);
	loopCountryID3(src_Address, new_dbo_Address_Facility_FacilityReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[Address_Facility] ([FacilityReportID],[StreetName],[BuildingNumber],[CityName],[PostcodeCode],[CountryID]) VALUES (?,?,?,?,?,?);  SELECT @@IDENTITY AS [AddressID]", true);
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("FacilityReportID"));
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("StreetName"));
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("BuildingNumber"));
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("CityName"));
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("PostcodeCode"));
		command.AddParameter(new_dbo_Address_Facility_FacilityReportID.Get("CountryID"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_Address_Facility_FacilityReportID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopStreetName2(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// loop "StreetName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_StreetName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_StreetName]))
	{
		foreach (XmlNode cur_StreetName in en_StreetName)
		{
			m_var618_StreetName = cur_StreetName;
			m_var621_StreetName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var618_StreetName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_StreetName]);
			addStreetName2(cur_StreetName, tgt_dbo_Address_Facility_FacilityReportID);
		}
	}
}

public void addStreetName2(XmlNode src_StreetName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// Create "StreetName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_StreetName], Altova.CoreTypes.CastToString(m_var621_StreetName_string));
}

public void loopBuildingNumber2(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// loop "BuildingNumber"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_BuildingNumber = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_BuildingNumber]))
	{
		foreach (XmlNode cur_BuildingNumber in en_BuildingNumber)
		{
			m_var622_BuildingNumber = cur_BuildingNumber;
			m_var625_BuildingNumber_string = Altova.Xml.XmlTreeOperations.CastToString(m_var622_BuildingNumber, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_BuildingNumber]);
			addBuildingNumber2(cur_BuildingNumber, tgt_dbo_Address_Facility_FacilityReportID);
		}
	}
}

public void addBuildingNumber2(XmlNode src_BuildingNumber, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// Create "BuildingNumber"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_BuildingNumber], Altova.CoreTypes.CastToString(m_var625_BuildingNumber_string));
}

public void loopCityName2(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// loop "CityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CityName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_CityName]))
	{
		foreach (XmlNode cur_CityName in en_CityName)
		{
			m_var626_CityName = cur_CityName;
			m_var629_CityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var626_CityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_CityName]);
			addCityName2(cur_CityName, tgt_dbo_Address_Facility_FacilityReportID);
		}
	}
}

public void addCityName2(XmlNode src_CityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// Create "CityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_CityName], Altova.CoreTypes.CastToString(m_var629_CityName_string));
}

public void loopPostcodeCode2(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// loop "PostcodeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PostcodeCode = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_PostcodeCode]))
	{
		foreach (XmlNode cur_PostcodeCode in en_PostcodeCode)
		{
			m_var630_PostcodeCode = cur_PostcodeCode;
			m_var633_PostcodeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var630_PostcodeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_PostcodeCode]);
			addPostcodeCode2(cur_PostcodeCode, tgt_dbo_Address_Facility_FacilityReportID);
		}
	}
}

public void addPostcodeCode2(XmlNode src_PostcodeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// Create "PostcodeCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_PostcodeCode], Altova.CoreTypes.CastToString(m_var633_PostcodeCode_string));
}

public void loopCountryID3(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// loop "CountryID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CountryID = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_CountryID]))
	{
		foreach (XmlNode cur_CountryID in en_CountryID)
		{
			m_var634_CountryID = cur_CountryID;
			m_var637_CountryID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var634_CountryID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityAddressType_altova_CountryID]);
			addCountryID3(cur_CountryID, tgt_dbo_Address_Facility_FacilityReportID);
		}
	}
}

public void addCountryID3(XmlNode src_CountryID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Facility_FacilityReportID)
{
	// Create "CountryID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Facility_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Facility_altova_CountryID], Altova.CoreTypes.CastToString(m_var637_CountryID_string));
}

public void loopPollutantRelease(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "PollutantRelease"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PollutantRelease = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PollutantRelease]))
	{
		foreach (XmlNode cur_PollutantRelease in en_PollutantRelease)
		{
			adddbo_PollutantRelease_FacilityReportID(cur_PollutantRelease, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_PollutantRelease_FacilityReportID(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.PollutantRelease|FacilityReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_PollutantRelease_FacilityReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_dbo_PollutantRelease_FacilityReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_FacilityReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopMediumCode(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopPollutantCode(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopMethodBasisCode(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopConfidentialIndicator2(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopConfidentialCode2(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopRemarkText3(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopTotalQuantity(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopTotalQuantity2(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopAccidentalQuantity(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	loopAccidentalQuantity2(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[PollutantRelease] ([FacilityReportID],[MediumCode],[PollutantCode],[MethodBasisCode],[ConfidentialIndicator],[ConfidentialCode],[RemarkText],[TotalQuantity],[TotalQuantityUnitCode],"
 + "[AccidentalQuantity],[AccidentalQuantityUnitCode]) VALUES (?,?,?,?,?,?,?,?,?,?,?);  SELECT @@IDENTITY AS [PollutantReleaseID]", true);
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("FacilityReportID"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("MediumCode"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("PollutantCode"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("MethodBasisCode"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("ConfidentialIndicator"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("ConfidentialCode"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("RemarkText"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("TotalQuantity"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("TotalQuantityUnitCode"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("AccidentalQuantity"));
		command.AddParameter(new_dbo_PollutantRelease_FacilityReportID.Get("AccidentalQuantityUnitCode"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_PollutantRelease_FacilityReportID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopMethodUsed(src_PollutantRelease, new_dbo_PollutantRelease_FacilityReportID);
	}
}

public void loopMediumCode(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "MediumCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MediumCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_MediumCode]))
	{
		foreach (XmlNode cur_MediumCode in en_MediumCode)
		{
			m_var640_MediumCode = cur_MediumCode;
			m_var643_MediumCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var640_MediumCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_MediumCode]);
			addMediumCode(cur_MediumCode, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addMediumCode(XmlNode src_MediumCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "MediumCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_MediumCode], Altova.CoreTypes.CastToString(m_var643_MediumCode_string));
}

public void loopPollutantCode(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "PollutantCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PollutantCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_PollutantCode]))
	{
		foreach (XmlNode cur_PollutantCode in en_PollutantCode)
		{
			m_var644_PollutantCode = cur_PollutantCode;
			m_var647_PollutantCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var644_PollutantCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_PollutantCode]);
			addPollutantCode(cur_PollutantCode, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addPollutantCode(XmlNode src_PollutantCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "PollutantCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_PollutantCode], Altova.CoreTypes.CastToString(m_var647_PollutantCode_string));
}

public void loopMethodBasisCode(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "MethodBasisCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodBasisCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_MethodBasisCode]))
	{
		foreach (XmlNode cur_MethodBasisCode in en_MethodBasisCode)
		{
			m_var648_MethodBasisCode = cur_MethodBasisCode;
			m_var651_MethodBasisCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var648_MethodBasisCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_MethodBasisCode]);
			addMethodBasisCode(cur_MethodBasisCode, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addMethodBasisCode(XmlNode src_MethodBasisCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "MethodBasisCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_MethodBasisCode], Altova.CoreTypes.CastToString(m_var651_MethodBasisCode_string));
}

public void loopConfidentialIndicator2(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "ConfidentialIndicator"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialIndicator = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_ConfidentialIndicator]))
	{
		foreach (XmlNode cur_ConfidentialIndicator in en_ConfidentialIndicator)
		{
			m_var652_ConfidentialIndicator = cur_ConfidentialIndicator;
			m_var655_ConfidentialIndicator_boolean = Altova.Xml.XmlTreeOperations.CastToBool(m_var652_ConfidentialIndicator, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_ConfidentialIndicator]);
			addConfidentialIndicator2(cur_ConfidentialIndicator, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addConfidentialIndicator2(XmlNode src_ConfidentialIndicator, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "ConfidentialIndicator"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_ConfidentialIndicator], Altova.CoreTypes.CastToBool(m_var655_ConfidentialIndicator_boolean));
}

public void loopConfidentialCode2(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "ConfidentialCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_ConfidentialCode]))
	{
		foreach (XmlNode cur_ConfidentialCode in en_ConfidentialCode)
		{
			m_var656_ConfidentialCode = cur_ConfidentialCode;
			m_var659_ConfidentialCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var656_ConfidentialCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_ConfidentialCode]);
			addConfidentialCode2(cur_ConfidentialCode, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addConfidentialCode2(XmlNode src_ConfidentialCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "ConfidentialCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_ConfidentialCode], Altova.CoreTypes.CastToString(m_var659_ConfidentialCode_string));
}

public void loopRemarkText3(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "RemarkText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RemarkText = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_RemarkText]))
	{
		foreach (XmlNode cur_RemarkText in en_RemarkText)
		{
			m_var660_RemarkText = cur_RemarkText;
			m_var663_RemarkText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var660_RemarkText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_RemarkText]);
			addRemarkText3(cur_RemarkText, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addRemarkText3(XmlNode src_RemarkText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "RemarkText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_RemarkText], Altova.CoreTypes.CastToString(m_var663_RemarkText_string));
}

public void loopTotalQuantity(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "TotalQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_TotalQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_TotalQuantity]))
	{
		foreach (XmlNode cur_TotalQuantity in en_TotalQuantity)
		{
			m_var664_TotalQuantity = cur_TotalQuantity;
			m_var665_TotalQuantity_decimal = Altova.Xml.XmlTreeOperations.CastToDecimal(m_var664_TotalQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_TotalQuantity]);
			m_var667_TotalQuantity_decimal_double = Altova.CoreTypes.CastToDouble(m_var665_TotalQuantity_decimal);
			addTotalQuantity(cur_TotalQuantity, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addTotalQuantity(XmlNode src_TotalQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "TotalQuantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_TotalQuantity], Altova.CoreTypes.CastToDouble(m_var667_TotalQuantity_decimal_double));
}

public void loopTotalQuantity2(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "TotalQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_TotalQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_TotalQuantity]))
	{
		foreach (XmlNode cur_TotalQuantity in en_TotalQuantity)
		{
			loopunitCode2(cur_TotalQuantity, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void loopunitCode2(XmlNode src_TotalQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "unitCode"
	XmlNode cur_unitCode = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_TotalQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_unitCode))
	{
		m_var671_unitCode = cur_unitCode;
		m_var674_unitCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var671_unitCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
		addTotalQuantityUnitCode(cur_unitCode, tgt_dbo_PollutantRelease_FacilityReportID);
	}
}

public void addTotalQuantityUnitCode(XmlNode src_unitCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "TotalQuantityUnitCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_TotalQuantityUnitCode], Altova.CoreTypes.CastToString(m_var674_unitCode_string));
}

public void loopAccidentalQuantity(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "AccidentalQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_AccidentalQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_AccidentalQuantity]))
	{
		foreach (XmlNode cur_AccidentalQuantity in en_AccidentalQuantity)
		{
			m_var675_AccidentalQuantity = cur_AccidentalQuantity;
			m_var676_AccidentalQuantity_decimal = Altova.Xml.XmlTreeOperations.CastToDecimal(m_var675_AccidentalQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_AccidentalQuantity]);
			m_var678_AccidentalQuantity_decimal_double = Altova.CoreTypes.CastToDouble(m_var676_AccidentalQuantity_decimal);
			addAccidentalQuantity(cur_AccidentalQuantity, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void addAccidentalQuantity(XmlNode src_AccidentalQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "AccidentalQuantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_AccidentalQuantity], Altova.CoreTypes.CastToDouble(m_var678_AccidentalQuantity_decimal_double));
}

public void loopAccidentalQuantity2(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "AccidentalQuantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_AccidentalQuantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_AccidentalQuantity]))
	{
		foreach (XmlNode cur_AccidentalQuantity in en_AccidentalQuantity)
		{
			loopunitCode3(cur_AccidentalQuantity, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void loopunitCode3(XmlNode src_AccidentalQuantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "unitCode"
	XmlNode cur_unitCode = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_AccidentalQuantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_unitCode))
	{
		m_var682_unitCode = cur_unitCode;
		m_var685_unitCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var682_unitCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
		addAccidentalQuantityUnitCode(cur_unitCode, tgt_dbo_PollutantRelease_FacilityReportID);
	}
}

public void addAccidentalQuantityUnitCode(XmlNode src_unitCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "AccidentalQuantityUnitCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_AccidentalQuantityUnitCode], Altova.CoreTypes.CastToString(m_var685_unitCode_string));
}

public void loopMethodUsed(XmlNode src_PollutantRelease, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// loop "MethodUsed"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodUsed = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantRelease, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantReleaseType_altova_MethodUsed]))
	{
		foreach (XmlNode cur_MethodUsed in en_MethodUsed)
		{
			adddbo_MethodUsed_PollutantRelease_PollutantReleaseID(cur_MethodUsed, tgt_dbo_PollutantRelease_FacilityReportID);
		}
	}
}

public void adddbo_MethodUsed_PollutantRelease_PollutantReleaseID(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantRelease_FacilityReportID)
{
	// Create "dbo.MethodUsed_PollutantRelease|PollutantReleaseID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_dbo_MethodUsed_PollutantRelease_PollutantReleaseID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantRelease_altova_PollutantReleaseID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_PollutantRelease_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantRelease_altova_PollutantReleaseID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopMethodTypeCode(src_MethodUsed, new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID);
	loopDesignation(src_MethodUsed, new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[MethodUsed_PollutantRelease] ([PollutantReleaseID],[MethodUsed],[MethodDesignation]) VALUES (?,?,?)", false);
		command.AddParameter(new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID.Get("PollutantReleaseID"));
		command.AddParameter(new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID.Get("MethodUsed"));
		command.AddParameter(new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID.Get("MethodDesignation"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_MethodUsed_PollutantRelease_PollutantReleaseID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopMethodTypeCode(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID)
{
	// loop "MethodTypeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodTypeCode = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]))
	{
		foreach (XmlNode cur_MethodTypeCode in en_MethodTypeCode)
		{
			m_var688_MethodTypeCode = cur_MethodTypeCode;
			m_var691_MethodTypeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var688_MethodTypeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]);
			addMethodUsed(cur_MethodTypeCode, tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID);
		}
	}
}

public void addMethodUsed(XmlNode src_MethodTypeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID)
{
	// Create "MethodUsed"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantRelease_altova_MethodUsed], Altova.CoreTypes.CastToString(m_var691_MethodTypeCode_string));
}

public void loopDesignation(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID)
{
	// loop "Designation"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Designation = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]))
	{
		foreach (XmlNode cur_Designation in en_Designation)
		{
			m_var692_Designation = cur_Designation;
			m_var695_Designation_string = Altova.Xml.XmlTreeOperations.CastToString(m_var692_Designation, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]);
			addMethodDesignation(cur_Designation, tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID);
		}
	}
}

public void addMethodDesignation(XmlNode src_Designation, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID)
{
	// Create "MethodDesignation"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_PollutantRelease_PollutantReleaseID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantRelease_altova_MethodDesignation], Altova.CoreTypes.CastToString(m_var695_Designation_string));
}

public void loopPollutantTransfer(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "PollutantTransfer"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PollutantTransfer = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_PollutantTransfer]))
	{
		foreach (XmlNode cur_PollutantTransfer in en_PollutantTransfer)
		{
			adddbo_PollutantTransfer_FacilityReportID(cur_PollutantTransfer, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_PollutantTransfer_FacilityReportID(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.PollutantTransfer|FacilityReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_PollutantTransfer_FacilityReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_dbo_PollutantTransfer_FacilityReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_FacilityReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopPollutantCode2(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopMethodBasisCode2(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopConfidentialIndicator3(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopConfidentialCode3(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopRemarkText4(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopQuantity3(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	loopQuantity4(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[PollutantTransfer] ([FacilityReportID],[PollutantCode],[MethodBasisCode],[ConfidentialIndicator],[ConfidentialCode],[RemarkText],[Quantity],[QuantityUnitCode]) VALUES (?,?,?,?,?,?,?"
 + ",?);  SELECT @@IDENTITY AS [PollutantTransferID]", true);
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("FacilityReportID"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("PollutantCode"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("MethodBasisCode"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("ConfidentialIndicator"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("ConfidentialCode"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("RemarkText"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("Quantity"));
		command.AddParameter(new_dbo_PollutantTransfer_FacilityReportID.Get("QuantityUnitCode"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_PollutantTransfer_FacilityReportID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopMethodUsed2(src_PollutantTransfer, new_dbo_PollutantTransfer_FacilityReportID);
	}
}

public void loopPollutantCode2(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "PollutantCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PollutantCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_PollutantCode]))
	{
		foreach (XmlNode cur_PollutantCode in en_PollutantCode)
		{
			m_var698_PollutantCode = cur_PollutantCode;
			m_var701_PollutantCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var698_PollutantCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_PollutantCode]);
			addPollutantCode2(cur_PollutantCode, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addPollutantCode2(XmlNode src_PollutantCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "PollutantCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_PollutantCode], Altova.CoreTypes.CastToString(m_var701_PollutantCode_string));
}

public void loopMethodBasisCode2(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "MethodBasisCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodBasisCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_MethodBasisCode]))
	{
		foreach (XmlNode cur_MethodBasisCode in en_MethodBasisCode)
		{
			m_var702_MethodBasisCode = cur_MethodBasisCode;
			m_var705_MethodBasisCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var702_MethodBasisCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_MethodBasisCode]);
			addMethodBasisCode2(cur_MethodBasisCode, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addMethodBasisCode2(XmlNode src_MethodBasisCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "MethodBasisCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_MethodBasisCode], Altova.CoreTypes.CastToString(m_var705_MethodBasisCode_string));
}

public void loopConfidentialIndicator3(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "ConfidentialIndicator"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialIndicator = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_ConfidentialIndicator]))
	{
		foreach (XmlNode cur_ConfidentialIndicator in en_ConfidentialIndicator)
		{
			m_var706_ConfidentialIndicator = cur_ConfidentialIndicator;
			m_var709_ConfidentialIndicator_boolean = Altova.Xml.XmlTreeOperations.CastToBool(m_var706_ConfidentialIndicator, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_ConfidentialIndicator]);
			addConfidentialIndicator3(cur_ConfidentialIndicator, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addConfidentialIndicator3(XmlNode src_ConfidentialIndicator, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "ConfidentialIndicator"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_ConfidentialIndicator], Altova.CoreTypes.CastToBool(m_var709_ConfidentialIndicator_boolean));
}

public void loopConfidentialCode3(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "ConfidentialCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialCode = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_ConfidentialCode]))
	{
		foreach (XmlNode cur_ConfidentialCode in en_ConfidentialCode)
		{
			m_var710_ConfidentialCode = cur_ConfidentialCode;
			m_var713_ConfidentialCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var710_ConfidentialCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_ConfidentialCode]);
			addConfidentialCode3(cur_ConfidentialCode, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addConfidentialCode3(XmlNode src_ConfidentialCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "ConfidentialCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_ConfidentialCode], Altova.CoreTypes.CastToString(m_var713_ConfidentialCode_string));
}

public void loopRemarkText4(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "RemarkText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RemarkText = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_RemarkText]))
	{
		foreach (XmlNode cur_RemarkText in en_RemarkText)
		{
			m_var714_RemarkText = cur_RemarkText;
			m_var717_RemarkText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var714_RemarkText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_RemarkText]);
			addRemarkText4(cur_RemarkText, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addRemarkText4(XmlNode src_RemarkText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "RemarkText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_RemarkText], Altova.CoreTypes.CastToString(m_var717_RemarkText_string));
}

public void loopQuantity3(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			m_var718_Quantity = cur_Quantity;
			m_var719_Quantity_decimal = Altova.Xml.XmlTreeOperations.CastToDecimal(m_var718_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_Quantity]);
			m_var721_Quantity_decimal_double = Altova.CoreTypes.CastToDouble(m_var719_Quantity_decimal);
			addQuantity2(cur_Quantity, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void addQuantity2(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "Quantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_Quantity], Altova.CoreTypes.CastToDouble(m_var721_Quantity_decimal_double));
}

public void loopQuantity4(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			loopunitCode4(cur_Quantity, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void loopunitCode4(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "unitCode"
	XmlNode cur_unitCode = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_unitCode))
	{
		m_var725_unitCode = cur_unitCode;
		m_var728_unitCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var725_unitCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantMassQuantityType_altova_unitCode]);
		addQuantityUnitCode2(cur_unitCode, tgt_dbo_PollutantTransfer_FacilityReportID);
	}
}

public void addQuantityUnitCode2(XmlNode src_unitCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "QuantityUnitCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_QuantityUnitCode], Altova.CoreTypes.CastToString(m_var728_unitCode_string));
}

public void loopMethodUsed2(XmlNode src_PollutantTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// loop "MethodUsed"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodUsed = Altova.Xml.XmlTreeOperations.GetElements(src_PollutantTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_PollutantTransferType_altova_MethodUsed]))
	{
		foreach (XmlNode cur_MethodUsed in en_MethodUsed)
		{
			adddbo_MethodUsed_PollutantTransfer_PollutantTransferID(cur_MethodUsed, tgt_dbo_PollutantTransfer_FacilityReportID);
		}
	}
}

public void adddbo_MethodUsed_PollutantTransfer_PollutantTransferID(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_PollutantTransfer_FacilityReportID)
{
	// Create "dbo.MethodUsed_PollutantTransfer|PollutantTransferID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_dbo_MethodUsed_PollutantTransfer_PollutantTransferID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantTransfer_altova_PollutantTransferID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_PollutantTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_PollutantTransfer_altova_PollutantTransferID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopMethodTypeCode2(src_MethodUsed, new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID);
	loopDesignation2(src_MethodUsed, new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[MethodUsed_PollutantTransfer] ([PollutantTransferID],[MethodUsed],[MethodDesignation]) VALUES (?,?,?)", false);
		command.AddParameter(new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID.Get("PollutantTransferID"));
		command.AddParameter(new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID.Get("MethodUsed"));
		command.AddParameter(new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID.Get("MethodDesignation"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_MethodUsed_PollutantTransfer_PollutantTransferID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopMethodTypeCode2(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID)
{
	// loop "MethodTypeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodTypeCode = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]))
	{
		foreach (XmlNode cur_MethodTypeCode in en_MethodTypeCode)
		{
			m_var731_MethodTypeCode = cur_MethodTypeCode;
			m_var734_MethodTypeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var731_MethodTypeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]);
			addMethodUsed2(cur_MethodTypeCode, tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID);
		}
	}
}

public void addMethodUsed2(XmlNode src_MethodTypeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID)
{
	// Create "MethodUsed"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantTransfer_altova_MethodUsed], Altova.CoreTypes.CastToString(m_var734_MethodTypeCode_string));
}

public void loopDesignation2(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID)
{
	// loop "Designation"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Designation = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]))
	{
		foreach (XmlNode cur_Designation in en_Designation)
		{
			m_var735_Designation = cur_Designation;
			m_var738_Designation_string = Altova.Xml.XmlTreeOperations.CastToString(m_var735_Designation, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]);
			addMethodDesignation2(cur_Designation, tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID);
		}
	}
}

public void addMethodDesignation2(XmlNode src_Designation, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID)
{
	// Create "MethodDesignation"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_PollutantTransfer_PollutantTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_PollutantTransfer_altova_MethodDesignation], Altova.CoreTypes.CastToString(m_var738_Designation_string));
}

public void loopWasteTransfer(XmlNode src_FacilityReport, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// loop "WasteTransfer"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteTransfer = Altova.Xml.XmlTreeOperations.GetElements(src_FacilityReport, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_FacilityReportType_altova_WasteTransfer]))
	{
		foreach (XmlNode cur_WasteTransfer in en_WasteTransfer)
		{
			adddbo_WasteTransfer_FacilityReportID(cur_WasteTransfer, tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID);
		}
	}
}

public void adddbo_WasteTransfer_FacilityReportID(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID)
{
	// Create "dbo.WasteTransfer|FacilityReportID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_WasteTransfer_FacilityReportID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_dbo_WasteTransfer_FacilityReportID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_FacilityReportID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_FacilityReport_PollutantReleaseAndTransferReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_FacilityReport_altova_FacilityReportID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopWasteTypeCode(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopWasteTreatmentCode(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopMethodBasisCode3(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopConfidentialIndicator4(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopConfidentialCode4(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopRemarkText5(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopQuantity5(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopQuantity6(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	loopWasteHandlerParty(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[WasteTransfer] ([FacilityReportID],[WasteTypeCode],[WasteTreatmentCode],[MethodBasisCode],[ConfidentialIndicator],[ConfidentialCode],[RemarkText],[Quantity],[QuantityUnitCode],[Wast"
 + "eHandlerPartyName]) VALUES (?,?,?,?,?,?,?,?,?,?);  SELECT @@IDENTITY AS [WasteTransferID]", true);
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("FacilityReportID"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("WasteTypeCode"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("WasteTreatmentCode"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("MethodBasisCode"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("ConfidentialIndicator"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("ConfidentialCode"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("RemarkText"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("Quantity"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("QuantityUnitCode"));
		command.AddParameter(new_dbo_WasteTransfer_FacilityReportID.Get("WasteHandlerPartyName"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_WasteTransfer_FacilityReportID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopWasteHandlerParty2(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
		loopWasteHandlerParty3(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
		loopMethodUsed3(src_WasteTransfer, new_dbo_WasteTransfer_FacilityReportID);
	}
}

public void loopWasteTypeCode(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "WasteTypeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteTypeCode = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteTypeCode]))
	{
		foreach (XmlNode cur_WasteTypeCode in en_WasteTypeCode)
		{
			m_var741_WasteTypeCode = cur_WasteTypeCode;
			m_var744_WasteTypeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var741_WasteTypeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteTypeCode]);
			addWasteTypeCode(cur_WasteTypeCode, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addWasteTypeCode(XmlNode src_WasteTypeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "WasteTypeCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteTypeCode], Altova.CoreTypes.CastToString(m_var744_WasteTypeCode_string));
}

public void loopWasteTreatmentCode(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "WasteTreatmentCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteTreatmentCode = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteTreatmentCode]))
	{
		foreach (XmlNode cur_WasteTreatmentCode in en_WasteTreatmentCode)
		{
			m_var745_WasteTreatmentCode = cur_WasteTreatmentCode;
			m_var748_WasteTreatmentCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var745_WasteTreatmentCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteTreatmentCode]);
			addWasteTreatmentCode(cur_WasteTreatmentCode, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addWasteTreatmentCode(XmlNode src_WasteTreatmentCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "WasteTreatmentCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteTreatmentCode], Altova.CoreTypes.CastToString(m_var748_WasteTreatmentCode_string));
}

public void loopMethodBasisCode3(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "MethodBasisCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodBasisCode = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_MethodBasisCode]))
	{
		foreach (XmlNode cur_MethodBasisCode in en_MethodBasisCode)
		{
			m_var749_MethodBasisCode = cur_MethodBasisCode;
			m_var752_MethodBasisCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var749_MethodBasisCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_MethodBasisCode]);
			addMethodBasisCode3(cur_MethodBasisCode, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addMethodBasisCode3(XmlNode src_MethodBasisCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "MethodBasisCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_MethodBasisCode], Altova.CoreTypes.CastToString(m_var752_MethodBasisCode_string));
}

public void loopConfidentialIndicator4(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "ConfidentialIndicator"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialIndicator = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_ConfidentialIndicator]))
	{
		foreach (XmlNode cur_ConfidentialIndicator in en_ConfidentialIndicator)
		{
			m_var753_ConfidentialIndicator = cur_ConfidentialIndicator;
			m_var756_ConfidentialIndicator_boolean = Altova.Xml.XmlTreeOperations.CastToBool(m_var753_ConfidentialIndicator, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_ConfidentialIndicator]);
			addConfidentialIndicator4(cur_ConfidentialIndicator, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addConfidentialIndicator4(XmlNode src_ConfidentialIndicator, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "ConfidentialIndicator"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_ConfidentialIndicator], Altova.CoreTypes.CastToBool(m_var756_ConfidentialIndicator_boolean));
}

public void loopConfidentialCode4(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "ConfidentialCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_ConfidentialCode = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_ConfidentialCode]))
	{
		foreach (XmlNode cur_ConfidentialCode in en_ConfidentialCode)
		{
			m_var757_ConfidentialCode = cur_ConfidentialCode;
			m_var760_ConfidentialCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var757_ConfidentialCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_ConfidentialCode]);
			addConfidentialCode4(cur_ConfidentialCode, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addConfidentialCode4(XmlNode src_ConfidentialCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "ConfidentialCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_ConfidentialCode], Altova.CoreTypes.CastToString(m_var760_ConfidentialCode_string));
}

public void loopRemarkText5(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "RemarkText"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_RemarkText = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_RemarkText]))
	{
		foreach (XmlNode cur_RemarkText in en_RemarkText)
		{
			m_var761_RemarkText = cur_RemarkText;
			m_var764_RemarkText_string = Altova.Xml.XmlTreeOperations.CastToString(m_var761_RemarkText, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_RemarkText]);
			addRemarkText5(cur_RemarkText, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addRemarkText5(XmlNode src_RemarkText, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "RemarkText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_RemarkText], Altova.CoreTypes.CastToString(m_var764_RemarkText_string));
}

public void loopQuantity5(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			m_var765_Quantity = cur_Quantity;
			m_var766_Quantity_decimal = Altova.Xml.XmlTreeOperations.CastToDecimal(m_var765_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_Quantity]);
			m_var768_Quantity_decimal_double = Altova.CoreTypes.CastToDouble(m_var766_Quantity_decimal);
			addQuantity3(cur_Quantity, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addQuantity3(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "Quantity"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_Quantity], Altova.CoreTypes.CastToDouble(m_var768_Quantity_decimal_double));
}

public void loopQuantity6(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "Quantity"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Quantity = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_Quantity]))
	{
		foreach (XmlNode cur_Quantity in en_Quantity)
		{
			loopunitCode5(cur_Quantity, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void loopunitCode5(XmlNode src_Quantity, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "unitCode"
	XmlNode cur_unitCode = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_Quantity, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteMassQuantityType_altova_unitCode]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_unitCode))
	{
		m_var772_unitCode = cur_unitCode;
		m_var775_unitCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var772_unitCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteMassQuantityType_altova_unitCode]);
		addQuantityUnitCode3(cur_unitCode, tgt_dbo_WasteTransfer_FacilityReportID);
	}
}

public void addQuantityUnitCode3(XmlNode src_unitCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "QuantityUnitCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_QuantityUnitCode], Altova.CoreTypes.CastToString(m_var775_unitCode_string));
}

public void loopWasteHandlerParty(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "WasteHandlerParty"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteHandlerParty = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteHandlerParty]))
	{
		foreach (XmlNode cur_WasteHandlerParty in en_WasteHandlerParty)
		{
			loopName2(cur_WasteHandlerParty, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void loopName2(XmlNode src_WasteHandlerParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "Name"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Name = Altova.Xml.XmlTreeOperations.GetElements(src_WasteHandlerParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteHandlerPartyType_altova_Name]))
	{
		foreach (XmlNode cur_Name in en_Name)
		{
			m_var778_Name = cur_Name;
			m_var781_Name_string = Altova.Xml.XmlTreeOperations.CastToString(m_var778_Name, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteHandlerPartyType_altova_Name]);
			addWasteHandlerPartyName(cur_Name, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void addWasteHandlerPartyName(XmlNode src_Name, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "WasteHandlerPartyName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteHandlerPartyName], Altova.CoreTypes.CastToString(m_var781_Name_string));
}

public void loopWasteHandlerParty2(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "WasteHandlerParty"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteHandlerParty = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteHandlerParty]))
	{
		foreach (XmlNode cur_WasteHandlerParty in en_WasteHandlerParty)
		{
			loopSiteAddress(cur_WasteHandlerParty, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void loopSiteAddress(XmlNode src_WasteHandlerParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "SiteAddress"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_SiteAddress = Altova.Xml.XmlTreeOperations.GetElements(src_WasteHandlerParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteHandlerPartyType_altova_SiteAddress]))
	{
		foreach (XmlNode cur_SiteAddress in en_SiteAddress)
		{
			adddbo_Address_WasteSite_WasteTransferID(cur_SiteAddress, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void adddbo_Address_WasteSite_WasteTransferID(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "dbo.Address_WasteSite|WasteTransferID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_Address_WasteSite_WasteTransferID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_dbo_Address_WasteSite_WasteTransferID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_WasteTransferID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteTransferID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopStreetName3(src_SiteAddress, new_dbo_Address_WasteSite_WasteTransferID);
	loopBuildingNumber3(src_SiteAddress, new_dbo_Address_WasteSite_WasteTransferID);
	loopCityName3(src_SiteAddress, new_dbo_Address_WasteSite_WasteTransferID);
	loopPostcodeCode3(src_SiteAddress, new_dbo_Address_WasteSite_WasteTransferID);
	loopCountryID4(src_SiteAddress, new_dbo_Address_WasteSite_WasteTransferID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[Address_WasteSite] ([WasteTransferID],[StreetName],[BuildingNumber],[CityName],[PostcodeCode],[CountryID]) VALUES (?,?,?,?,?,?);  SELECT @@IDENTITY AS [AddressID]", true);
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("WasteTransferID"));
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("StreetName"));
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("BuildingNumber"));
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("CityName"));
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("PostcodeCode"));
		command.AddParameter(new_dbo_Address_WasteSite_WasteTransferID.Get("CountryID"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_Address_WasteSite_WasteTransferID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopStreetName3(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// loop "StreetName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_StreetName = Altova.Xml.XmlTreeOperations.GetElements(src_SiteAddress, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_StreetName]))
	{
		foreach (XmlNode cur_StreetName in en_StreetName)
		{
			m_var786_StreetName = cur_StreetName;
			m_var789_StreetName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var786_StreetName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_StreetName]);
			addStreetName3(cur_StreetName, tgt_dbo_Address_WasteSite_WasteTransferID);
		}
	}
}

public void addStreetName3(XmlNode src_StreetName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// Create "StreetName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_StreetName], Altova.CoreTypes.CastToString(m_var789_StreetName_string));
}

public void loopBuildingNumber3(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// loop "BuildingNumber"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_BuildingNumber = Altova.Xml.XmlTreeOperations.GetElements(src_SiteAddress, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_BuildingNumber]))
	{
		foreach (XmlNode cur_BuildingNumber in en_BuildingNumber)
		{
			m_var790_BuildingNumber = cur_BuildingNumber;
			m_var793_BuildingNumber_string = Altova.Xml.XmlTreeOperations.CastToString(m_var790_BuildingNumber, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_BuildingNumber]);
			addBuildingNumber3(cur_BuildingNumber, tgt_dbo_Address_WasteSite_WasteTransferID);
		}
	}
}

public void addBuildingNumber3(XmlNode src_BuildingNumber, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// Create "BuildingNumber"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_BuildingNumber], Altova.CoreTypes.CastToString(m_var793_BuildingNumber_string));
}

public void loopCityName3(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// loop "CityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CityName = Altova.Xml.XmlTreeOperations.GetElements(src_SiteAddress, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CityName]))
	{
		foreach (XmlNode cur_CityName in en_CityName)
		{
			m_var794_CityName = cur_CityName;
			m_var797_CityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var794_CityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CityName]);
			addCityName3(cur_CityName, tgt_dbo_Address_WasteSite_WasteTransferID);
		}
	}
}

public void addCityName3(XmlNode src_CityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// Create "CityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_CityName], Altova.CoreTypes.CastToString(m_var797_CityName_string));
}

public void loopPostcodeCode3(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// loop "PostcodeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PostcodeCode = Altova.Xml.XmlTreeOperations.GetElements(src_SiteAddress, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_PostcodeCode]))
	{
		foreach (XmlNode cur_PostcodeCode in en_PostcodeCode)
		{
			m_var798_PostcodeCode = cur_PostcodeCode;
			m_var801_PostcodeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var798_PostcodeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_PostcodeCode]);
			addPostcodeCode3(cur_PostcodeCode, tgt_dbo_Address_WasteSite_WasteTransferID);
		}
	}
}

public void addPostcodeCode3(XmlNode src_PostcodeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// Create "PostcodeCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_PostcodeCode], Altova.CoreTypes.CastToString(m_var801_PostcodeCode_string));
}

public void loopCountryID4(XmlNode src_SiteAddress, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// loop "CountryID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CountryID = Altova.Xml.XmlTreeOperations.GetElements(src_SiteAddress, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CountryID]))
	{
		foreach (XmlNode cur_CountryID in en_CountryID)
		{
			m_var802_CountryID = cur_CountryID;
			m_var805_CountryID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var802_CountryID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CountryID]);
			addCountryID4(cur_CountryID, tgt_dbo_Address_WasteSite_WasteTransferID);
		}
	}
}

public void addCountryID4(XmlNode src_CountryID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_WasteSite_WasteTransferID)
{
	// Create "CountryID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_WasteSite_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_WasteSite_altova_CountryID], Altova.CoreTypes.CastToString(m_var805_CountryID_string));
}

public void loopWasteHandlerParty3(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "WasteHandlerParty"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_WasteHandlerParty = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_WasteHandlerParty]))
	{
		foreach (XmlNode cur_WasteHandlerParty in en_WasteHandlerParty)
		{
			loopAddress3(cur_WasteHandlerParty, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void loopAddress3(XmlNode src_WasteHandlerParty, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "Address"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Address = Altova.Xml.XmlTreeOperations.GetElements(src_WasteHandlerParty, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteHandlerPartyType_altova_Address]))
	{
		foreach (XmlNode cur_Address in en_Address)
		{
			adddbo_Address_Waste_WasteTransferID(cur_Address, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void adddbo_Address_Waste_WasteTransferID(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "dbo.Address_Waste|WasteTransferID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_Address_Waste_WasteTransferID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_dbo_Address_Waste_WasteTransferID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_WasteTransferID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteTransferID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopStreetName4(src_Address, new_dbo_Address_Waste_WasteTransferID);
	loopBuildingNumber4(src_Address, new_dbo_Address_Waste_WasteTransferID);
	loopCityName4(src_Address, new_dbo_Address_Waste_WasteTransferID);
	loopPostcodeCode4(src_Address, new_dbo_Address_Waste_WasteTransferID);
	loopCountryID5(src_Address, new_dbo_Address_Waste_WasteTransferID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[Address_Waste] ([WasteTransferID],[StreetName],[BuildingNumber],[CityName],[PostcodeCode],[CountryID]) VALUES (?,?,?,?,?,?);  SELECT @@IDENTITY AS [AddressID]", true);
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("WasteTransferID"));
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("StreetName"));
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("BuildingNumber"));
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("CityName"));
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("PostcodeCode"));
		command.AddParameter(new_dbo_Address_Waste_WasteTransferID.Get("CountryID"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_Address_Waste_WasteTransferID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopStreetName4(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// loop "StreetName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_StreetName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_StreetName]))
	{
		foreach (XmlNode cur_StreetName in en_StreetName)
		{
			m_var810_StreetName = cur_StreetName;
			m_var813_StreetName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var810_StreetName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_StreetName]);
			addStreetName4(cur_StreetName, tgt_dbo_Address_Waste_WasteTransferID);
		}
	}
}

public void addStreetName4(XmlNode src_StreetName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// Create "StreetName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_StreetName], Altova.CoreTypes.CastToString(m_var813_StreetName_string));
}

public void loopBuildingNumber4(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// loop "BuildingNumber"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_BuildingNumber = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_BuildingNumber]))
	{
		foreach (XmlNode cur_BuildingNumber in en_BuildingNumber)
		{
			m_var814_BuildingNumber = cur_BuildingNumber;
			m_var817_BuildingNumber_string = Altova.Xml.XmlTreeOperations.CastToString(m_var814_BuildingNumber, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_BuildingNumber]);
			addBuildingNumber4(cur_BuildingNumber, tgt_dbo_Address_Waste_WasteTransferID);
		}
	}
}

public void addBuildingNumber4(XmlNode src_BuildingNumber, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// Create "BuildingNumber"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_BuildingNumber], Altova.CoreTypes.CastToString(m_var817_BuildingNumber_string));
}

public void loopCityName4(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// loop "CityName"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CityName = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CityName]))
	{
		foreach (XmlNode cur_CityName in en_CityName)
		{
			m_var818_CityName = cur_CityName;
			m_var821_CityName_string = Altova.Xml.XmlTreeOperations.CastToString(m_var818_CityName, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CityName]);
			addCityName4(cur_CityName, tgt_dbo_Address_Waste_WasteTransferID);
		}
	}
}

public void addCityName4(XmlNode src_CityName, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// Create "CityName"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_CityName], Altova.CoreTypes.CastToString(m_var821_CityName_string));
}

public void loopPostcodeCode4(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// loop "PostcodeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_PostcodeCode = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_PostcodeCode]))
	{
		foreach (XmlNode cur_PostcodeCode in en_PostcodeCode)
		{
			m_var822_PostcodeCode = cur_PostcodeCode;
			m_var825_PostcodeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var822_PostcodeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_PostcodeCode]);
			addPostcodeCode4(cur_PostcodeCode, tgt_dbo_Address_Waste_WasteTransferID);
		}
	}
}

public void addPostcodeCode4(XmlNode src_PostcodeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// Create "PostcodeCode"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_PostcodeCode], Altova.CoreTypes.CastToString(m_var825_PostcodeCode_string));
}

public void loopCountryID5(XmlNode src_Address, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// loop "CountryID"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_CountryID = Altova.Xml.XmlTreeOperations.GetElements(src_Address, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CountryID]))
	{
		foreach (XmlNode cur_CountryID in en_CountryID)
		{
			m_var826_CountryID = cur_CountryID;
			m_var829_CountryID_string = Altova.Xml.XmlTreeOperations.CastToString(m_var826_CountryID, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_AddressType_altova_CountryID]);
			addCountryID5(cur_CountryID, tgt_dbo_Address_Waste_WasteTransferID);
		}
	}
}

public void addCountryID5(XmlNode src_CountryID, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_Address_Waste_WasteTransferID)
{
	// Create "CountryID"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_Address_Waste_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_Address_Waste_altova_CountryID], Altova.CoreTypes.CastToString(m_var829_CountryID_string));
}

public void loopMethodUsed3(XmlNode src_WasteTransfer, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// loop "MethodUsed"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodUsed = Altova.Xml.XmlTreeOperations.GetElements(src_WasteTransfer, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_WasteTransferType_altova_MethodUsed]))
	{
		foreach (XmlNode cur_MethodUsed in en_MethodUsed)
		{
			adddbo_MethodUsed_WasteTransfer_WasteTransferID(cur_MethodUsed, tgt_dbo_WasteTransfer_FacilityReportID);
		}
	}
}

public void adddbo_MethodUsed_WasteTransfer_WasteTransferID(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_WasteTransfer_FacilityReportID)
{
	// Create "dbo.MethodUsed_WasteTransfer|WasteTransferID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_MethodUsed_WasteTransfer_WasteTransferID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_dbo_MethodUsed_WasteTransfer_WasteTransferID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_MethodUsed_WasteTransfer_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_WasteTransfer_altova_WasteTransferID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_WasteTransfer_FacilityReportID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_WasteTransfer_altova_WasteTransferID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopMethodTypeCode3(src_MethodUsed, new_dbo_MethodUsed_WasteTransfer_WasteTransferID);
	loopDesignation3(src_MethodUsed, new_dbo_MethodUsed_WasteTransfer_WasteTransferID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[MethodUsed_WasteTransfer] ([WasteTransferID],[MethodUsed],[MethodDesignation]) VALUES (?,?,?)", false);
		command.AddParameter(new_dbo_MethodUsed_WasteTransfer_WasteTransferID.Get("WasteTransferID"));
		command.AddParameter(new_dbo_MethodUsed_WasteTransfer_WasteTransferID.Get("MethodUsed"));
		command.AddParameter(new_dbo_MethodUsed_WasteTransfer_WasteTransferID.Get("MethodDesignation"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_MethodUsed_WasteTransfer_WasteTransferID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopMethodTypeCode3(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID)
{
	// loop "MethodTypeCode"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_MethodTypeCode = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]))
	{
		foreach (XmlNode cur_MethodTypeCode in en_MethodTypeCode)
		{
			m_var832_MethodTypeCode = cur_MethodTypeCode;
			m_var835_MethodTypeCode_string = Altova.Xml.XmlTreeOperations.CastToString(m_var832_MethodTypeCode, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_MethodTypeCode]);
			addMethodUsed3(cur_MethodTypeCode, tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID);
		}
	}
}

public void addMethodUsed3(XmlNode src_MethodTypeCode, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID)
{
	// Create "MethodUsed"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_WasteTransfer_altova_MethodUsed], Altova.CoreTypes.CastToString(m_var835_MethodTypeCode_string));
}

public void loopDesignation3(XmlNode src_MethodUsed, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID)
{
	// loop "Designation"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_Designation = Altova.Xml.XmlTreeOperations.GetElements(src_MethodUsed, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]))
	{
		foreach (XmlNode cur_Designation in en_Designation)
		{
			m_var836_Designation = cur_Designation;
			m_var839_Designation_string = Altova.Xml.XmlTreeOperations.CastToString(m_var836_Designation, PollutantReleaseAndTransferReport_TypeInfo.binder.Members[PollutantReleaseAndTransferReport_TypeInfo._altova_mi_rsm_altova_MethodUsedType_altova_Designation]);
			addMethodDesignation3(cur_Designation, tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID);
		}
	}
}

public void addMethodDesignation3(XmlNode src_Designation, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID)
{
	// Create "MethodDesignation"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_MethodUsed_WasteTransfer_WasteTransferID, EPRTRxml_TypeInfo.binder.Members[EPRTRxml_TypeInfo._altova_mi_dbo_altova_MethodUsed_WasteTransfer_altova_MethodDesignation], Altova.CoreTypes.CastToString(m_var839_Designation_string));
}

	public bool CloseObjectsAfterRun
	{
		get
		{
			return runDoesCloseAll;
		}
		set
		{
			runDoesCloseAll = value;
		}
	}
  } 
}

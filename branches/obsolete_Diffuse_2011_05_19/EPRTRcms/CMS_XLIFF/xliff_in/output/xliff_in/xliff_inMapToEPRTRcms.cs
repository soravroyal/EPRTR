////////////////////////////////////////////////////////////////////////
//
// xliff_inMapToEPRTRcms.cs
//
// This file was generated by MapForce 2008r2sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Data;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;
using Altova.Db;


using EPRTRcms; // application.libraries
using xliff_core_1_2_transitional; // application.libraries



namespace xliff_in

{
	
	public class xliff_inMapToEPRTRcms : Altova.TraceProvider 
	{
		private bool runDoesCloseAll = true;
		
		#region Members
		// documents
		
		// instances
		protected XmlNode	m_xliff_core_1_2_transitional2Instance;
		protected AutoNumberStateMap mAutoNumberStates;
		// members
		protected XmlNode m_var50_datatype;
		protected /* type 44 */ string m_var51_datatype_anySimpleType;
		protected string m_var53_datatype_anySimpleType_string;
		protected XmlNode m_var54_source_language;
		protected /* type 35 */ string m_var55_source_language_language;
		protected string m_var57_source_language_language_string;
		protected XmlNode m_var58_target_language;
		protected /* type 35 */ string m_var59_target_language_language;
		protected string m_var61_target_language_language_string;
		protected XmlNode m_var66_id;
		protected string m_var69_id_string;
		protected XmlNode m_var72_id;
		protected string m_var75_id_string;
		protected XmlNode m_var76_source;
		protected string m_var79_source_string;
		protected XmlNode m_var80_target;
		protected string m_var83_target_string;
		protected XmlNode m_var86_note;
		protected string m_var89_note_string;
		Altova.Db.DbTreeOperations.TransactionHelper mTransactionHelper;
		#endregion //Members


		public void Run(String xliff_core_1_2_transitional2SourceFilename, string EPRTRcmsTargetConnectionString)
		{
		// open source streams
		WriteTrace("Loading " + xliff_core_1_2_transitional2SourceFilename + "...\n");
		Altova.IO.Input xliff_core_1_2_transitional2Source = new Altova.IO.FileInput(xliff_core_1_2_transitional2SourceFilename);

		// run
		Run(xliff_core_1_2_transitional2Source, EPRTRcmsTargetConnectionString);

		// close source streams
		xliff_core_1_2_transitional2Source.Stream.Close();
	}

		public void Run(Altova.IO.Input xliff_core_1_2_transitional2Source, string EPRTRcmsTargetConnectionString)
		{
			mAutoNumberStates = new AutoNumberStateMap();
			// Open the source(s)
			XmlDocument xliff_core_1_2_transitional2DocSourceObject = XmlTreeOperations.LoadDocument(xliff_core_1_2_transitional2Source);


			System.Collections.IEnumerator itxliff_core_1_2_transitional2 = XmlTreeOperations.GetElements(xliff_core_1_2_transitional2DocSourceObject, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_unnamedType_altova_xliff]).GetEnumerator();			
			if (!itxliff_core_1_2_transitional2.MoveNext())
				throw new Altova.Types.DataSourceUnavailableException("Source is of invalid type: " + xliff_core_1_2_transitional2Source);
			
			m_xliff_core_1_2_transitional2Instance = (System.Xml.XmlNode)itxliff_core_1_2_transitional2.Current;
			// Create the target
			WriteTrace("Connecting to EPRTRcms database...\n");
			System.Data.OleDb.OleDbConnection EPRTRcmsTargetObject = null;	
			try
			{		
				EPRTRcmsTargetObject = new System.Data.OleDb.OleDbConnection( EPRTRcmsTargetConnectionString );
				EPRTRcmsTargetObject.Open();
			}
			catch (Exception e)
			{
				throw new DataTargetUnavailableException("Error connecting to database.", e);
			}
			mTransactionHelper = new DbTreeOperations.TransactionHelper(EPRTRcmsTargetObject, "BEGIN TRANSACTION ", "COMMIT TRANSACTION ", "ROLLBACK TRANSACTION ", "SAVE TRANSACTION  %%TRANSACTION_NAME%% ", "ROLLBACK TRANSACTION  %%TRANSACTION_NAME%% ");

			// Execute mapping
			loopfile(m_xliff_core_1_2_transitional2Instance, EPRTRcmsTargetObject);

			// Close the target
			EPRTRcmsTargetObject.Close();

			// Close the Source Library
		
			if (runDoesCloseAll)
			{
			xliff_core_1_2_transitional2Source.Close();
			}
		}

public void loopfile(XmlNode src_xliff, System.Data.IDbConnection tgt_EPRTRcms)
{
	// loop "file"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_file = Altova.Xml.XmlTreeOperations.GetElements(src_xliff, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_xliffType_altova_file]))
	{
		foreach (XmlNode cur_file in en_file)
		{
			adddbo_xliff_file(cur_file, tgt_EPRTRcms);
		}
	}
}

public void adddbo_xliff_file(XmlNode src_file, System.Data.IDbConnection tgt_EPRTRcms)
{
	// Create "dbo.xliff_file"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_xliff_file = 
		Altova.Db.DbTreeOperations.AddElement(tgt_EPRTRcms, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_altova_EPRTRcms_altova_dbo_xliff_file]);
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopdatatype(src_file, new_dbo_xliff_file);
	loopsource_language(src_file, new_dbo_xliff_file);
	looptarget_language(src_file, new_dbo_xliff_file);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[xliff_file] ([DataType],[SourceLanguage],[TargetLanguage]) VALUES (?,?,?);  SELECT @@IDENTITY AS [FileID]", true);
		command.AddParameter(new_dbo_xliff_file.Get("DataType"));
		command.AddParameter(new_dbo_xliff_file.Get("SourceLanguage"));
		command.AddParameter(new_dbo_xliff_file.Get("TargetLanguage"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_xliff_file.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		loopbody(src_file, new_dbo_xliff_file);
		loopheader(src_file, new_dbo_xliff_file);
	}
}

public void loopdatatype(XmlNode src_file, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "datatype"
	XmlNode cur_datatype = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_file, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_datatype]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_datatype))
	{
		m_var50_datatype = cur_datatype;
		m_var51_datatype_anySimpleType = Altova.Xml.XmlTreeOperations.CastToString(m_var50_datatype, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_datatype]);
		m_var53_datatype_anySimpleType_string = Altova.CoreTypes.CastToString(m_var51_datatype_anySimpleType);
		addDataType(cur_datatype, tgt_dbo_xliff_file);
	}
}

public void addDataType(XmlNode src_datatype, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// Create "DataType"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_DataType], Altova.CoreTypes.CastToString(m_var53_datatype_anySimpleType_string));
}

public void loopsource_language(XmlNode src_file, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "source-language"
	XmlNode cur_source_language = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_file, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_source_language]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_source_language))
	{
		m_var54_source_language = cur_source_language;
		m_var55_source_language_language = Altova.Xml.XmlTreeOperations.CastToString(m_var54_source_language, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_source_language]);
		m_var57_source_language_language_string = Altova.CoreTypes.CastToString(m_var55_source_language_language);
		addSourceLanguage(cur_source_language, tgt_dbo_xliff_file);
	}
}

public void addSourceLanguage(XmlNode src_source_language, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// Create "SourceLanguage"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_SourceLanguage], Altova.CoreTypes.CastToString(m_var57_source_language_language_string));
}

public void looptarget_language(XmlNode src_file, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "target-language"
	XmlNode cur_target_language = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_file, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_target_language]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_target_language))
	{
		m_var58_target_language = cur_target_language;
		m_var59_target_language_language = Altova.Xml.XmlTreeOperations.CastToString(m_var58_target_language, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_target_language]);
		m_var61_target_language_language_string = Altova.CoreTypes.CastToString(m_var59_target_language_language);
		addTargetLanguage(cur_target_language, tgt_dbo_xliff_file);
	}
}

public void addTargetLanguage(XmlNode src_target_language, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// Create "TargetLanguage"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_TargetLanguage], Altova.CoreTypes.CastToString(m_var61_target_language_language_string));
}

public void loopbody(XmlNode src_file, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "body"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_body = Altova.Xml.XmlTreeOperations.GetElements(src_file, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_body]))
	{
		foreach (XmlNode cur_body in en_body)
		{
			loopgroup(cur_body, tgt_dbo_xliff_file);
		}
	}
}

public void loopgroup(XmlNode src_body, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "group"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_group = Altova.Xml.XmlTreeOperations.GetElements(src_body, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_bodyType_altova_group]))
	{
		foreach (XmlNode cur_group in en_group)
		{
			adddbo_xliff_Group_FileID(cur_group, tgt_dbo_xliff_file);
		}
	}
}

public void adddbo_xliff_Group_FileID(XmlNode src_group, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// Create "dbo.xliff_Group|FileID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_xliff_Group_FileID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_dbo_xliff_Group_FileID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_xliff_Group_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Group_altova_FileID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_FileID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopid(src_group, new_dbo_xliff_Group_FileID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[xliff_Group] ([FileID],[GroupText]) VALUES (?,?);  SELECT @@IDENTITY AS [GroupID]", true);
		command.AddParameter(new_dbo_xliff_Group_FileID.Get("FileID"));
		command.AddParameter(new_dbo_xliff_Group_FileID.Get("GroupText"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_xliff_Group_FileID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		looptrans_unit(src_group, new_dbo_xliff_Group_FileID);
	}
}

public void loopid(XmlNode src_group, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Group_FileID)
{
	// loop "id"
	XmlNode cur_id = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_group, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_groupType_altova_id]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_id))
	{
		m_var66_id = cur_id;
		m_var69_id_string = Altova.Xml.XmlTreeOperations.CastToString(m_var66_id, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_groupType_altova_id]);
		addGroupText(cur_id, tgt_dbo_xliff_Group_FileID);
	}
}

public void addGroupText(XmlNode src_id, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Group_FileID)
{
	// Create "GroupText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_Group_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Group_altova_GroupText], Altova.CoreTypes.CastToString(m_var69_id_string));
}

public void looptrans_unit(XmlNode src_group, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Group_FileID)
{
	// loop "trans-unit"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_trans_unit = Altova.Xml.XmlTreeOperations.GetElements(src_group, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_groupType_altova_trans_unit]))
	{
		foreach (XmlNode cur_trans_unit in en_trans_unit)
		{
			adddbo_xliff_TransID_GroupID(cur_trans_unit, tgt_dbo_xliff_Group_FileID);
		}
	}
}

public void adddbo_xliff_TransID_GroupID(XmlNode src_trans_unit, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Group_FileID)
{
	// Create "dbo.xliff_TransID|GroupID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_xliff_TransID_GroupID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_xliff_Group_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Group_altova_dbo_xliff_TransID_GroupID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_xliff_TransID_GroupID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_TransID_altova_GroupID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_xliff_Group_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Group_altova_GroupID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopid2(src_trans_unit, new_dbo_xliff_TransID_GroupID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[xliff_TransID] ([GroupID],[TransIDText]) VALUES (?,?);  SELECT @@IDENTITY AS [TransID]", true);
		command.AddParameter(new_dbo_xliff_TransID_GroupID.Get("GroupID"));
		command.AddParameter(new_dbo_xliff_TransID_GroupID.Get("TransIDText"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_xliff_TransID_GroupID.Execute( cmdList, mTransactionHelper );
	}
	if (bProcessChildren) 
	{
		adddbo_xliff_Value_TransID(src_trans_unit, new_dbo_xliff_TransID_GroupID);
	}
}

public void loopid2(XmlNode src_trans_unit, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_TransID_GroupID)
{
	// loop "id"
	XmlNode cur_id = Altova.Xml.XmlTreeOperations.FindAttribute(
		src_trans_unit, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_id]);
	if (Altova.Xml.XmlTreeOperations.Exists(cur_id))
	{
		m_var72_id = cur_id;
		m_var75_id_string = Altova.Xml.XmlTreeOperations.CastToString(m_var72_id, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_id]);
		addTransIDText(cur_id, tgt_dbo_xliff_TransID_GroupID);
	}
}

public void addTransIDText(XmlNode src_id, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_TransID_GroupID)
{
	// Create "TransIDText"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_TransID_GroupID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_TransID_altova_TransIDText], Altova.CoreTypes.CastToString(m_var75_id_string));
}

public void adddbo_xliff_Value_TransID(XmlNode src_trans_unit, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_TransID_GroupID)
{
	// Create "dbo.xliff_Value|TransID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_xliff_Value_TransID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_xliff_TransID_GroupID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_TransID_altova_dbo_xliff_Value_TransID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_xliff_Value_TransID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Value_altova_TransID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_xliff_TransID_GroupID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_TransID_altova_TransID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopsource(src_trans_unit, new_dbo_xliff_Value_TransID);
	looptarget(src_trans_unit, new_dbo_xliff_Value_TransID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[xliff_Value] ([TransID],[Source],[Target]) VALUES (?,?,?);  SELECT @@IDENTITY AS [ValueID]", true);
		command.AddParameter(new_dbo_xliff_Value_TransID.Get("TransID"));
		command.AddParameter(new_dbo_xliff_Value_TransID.Get("Source"));
		command.AddParameter(new_dbo_xliff_Value_TransID.Get("Target"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_xliff_Value_TransID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopsource(XmlNode src_trans_unit, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Value_TransID)
{
	// loop "source"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_source = Altova.Xml.XmlTreeOperations.GetElements(src_trans_unit, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_source]))
	{
		foreach (XmlNode cur_source in en_source)
		{
			m_var76_source = cur_source;
			m_var79_source_string = Altova.Xml.XmlTreeOperations.CastToString(m_var76_source, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_source]);
			addSource(cur_source, tgt_dbo_xliff_Value_TransID);
		}
	}
}

public void addSource(XmlNode src_source, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Value_TransID)
{
	// Create "Source"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_Value_TransID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Value_altova_Source], Altova.CoreTypes.CastToString(m_var79_source_string));
}

public void looptarget(XmlNode src_trans_unit, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Value_TransID)
{
	// loop "target"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_target = Altova.Xml.XmlTreeOperations.GetElements(src_trans_unit, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_target]))
	{
		foreach (XmlNode cur_target in en_target)
		{
			m_var80_target = cur_target;
			m_var83_target_string = Altova.Xml.XmlTreeOperations.CastToString(m_var80_target, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_trans_unitType_altova_target]);
			addTarget(cur_target, tgt_dbo_xliff_Value_TransID);
		}
	}
}

public void addTarget(XmlNode src_target, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_Value_TransID)
{
	// Create "Target"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_Value_TransID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_Value_altova_Target], Altova.CoreTypes.CastToString(m_var83_target_string));
}

public void loopheader(XmlNode src_file, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// loop "header"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_header = Altova.Xml.XmlTreeOperations.GetElements(src_file, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_fileType_altova_header]))
	{
		foreach (XmlNode cur_header in en_header)
		{
			adddbo_xliff_header_FileID(cur_header, tgt_dbo_xliff_file);
		}
	}
}

public void adddbo_xliff_header_FileID(XmlNode src_header, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_file)
{
	// Create "dbo.xliff_header|FileID"
	Altova.Db.DbTreeOperations.RecordBuffer new_dbo_xliff_header_FileID = 
		Altova.Db.DbTreeOperations.AddElement(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_dbo_xliff_header_FileID]);
	Altova.Db.DbTreeOperations.SetValue(new_dbo_xliff_header_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_header_altova_FileID], Altova.Db.DbTreeOperations.FindAttribute(tgt_dbo_xliff_file, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_file_altova_FileID]));
	bool bRowsAffected = false;
	bool bProcessChildren = true;
	bool bDeleteRow = false;
	loopnote(src_header, new_dbo_xliff_header_FileID);
	if( !bRowsAffected )
	{
		ArrayList cmdList = new ArrayList();
		Altova.Db.Command command;
		command = new Altova.Db.Command("INSERT INTO [dbo].[xliff_header] ([FileID],[uid]) VALUES (?,?)", false);
		command.AddParameter(new_dbo_xliff_header_FileID.Get("FileID"));
		command.AddParameter(new_dbo_xliff_header_FileID.Get("uid"));
		cmdList.Add(command);

		bRowsAffected = new_dbo_xliff_header_FileID.Execute( cmdList, mTransactionHelper );
	}
}

public void loopnote(XmlNode src_header, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_header_FileID)
{
	// loop "note"
	using(Altova.Xml.XmlTreeOperations.MemberIterator en_note = Altova.Xml.XmlTreeOperations.GetElements(src_header, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_headerType_altova_note]))
	{
		foreach (XmlNode cur_note in en_note)
		{
			m_var86_note = cur_note;
			m_var89_note_string = Altova.Xml.XmlTreeOperations.CastToString(m_var86_note, xliff_core_1_2_transitional_TypeInfo.binder.Members[xliff_core_1_2_transitional_TypeInfo._altova_mi_xlf_altova_headerType_altova_note]);
			adduid(cur_note, tgt_dbo_xliff_header_FileID);
		}
	}
}

public void adduid(XmlNode src_note, Altova.Db.DbTreeOperations.RecordBuffer tgt_dbo_xliff_header_FileID)
{
	// Create "uid"
	Altova.Db.DbTreeOperations.SetValue(tgt_dbo_xliff_header_FileID, EPRTRcms_TypeInfo.binder.Members[EPRTRcms_TypeInfo._altova_mi_dbo_altova_xliff_header_altova_uid], Altova.CoreTypes.CastToString(m_var89_note_string));
}

	public bool CloseObjectsAfterRun
	{
		get
		{
			return runDoesCloseAll;
		}
		set
		{
			runDoesCloseAll = value;
		}
	}
  } 
}

<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  ESRI, Inc
//  Copyright 2008 ESRI, Inc
//  All Rights Reserved.
//
//  NOTICE: ESRI permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////
-->
<mx:Application	xmlns:mx			="http://www.adobe.com/2006/mxml" 
	            xmlns				="com.esri.solutions.flexviewer.*" 
	            layout				="absolute" 
	            applicationComplete	="init()" 
	            styleName			="plain" 
	            backgroundColor		="#6E6E6E">

<!--
/**
 * The site container has six major components:
 *  - ConfigManager: loads configuration file (config.xml), parse it and submit to event bus.
 *  - Controller   : holds branding UI elements and application navigation items such as menus.
 *  - DataManager  : manages data generated during a user session.
 *  - WidgetManager: manages widgets during the user session.
 *  - MapManager   : manages map(s) such as base map and live maps used during the user session.
 */
-->

	<mx:Script>
		<![CDATA[
			import com.esri.solutions.flexviewer.BaseWidget;
			import com.esri.solutions.flexviewer.utils.Hashtable;
			import mx.collections.ArrayCollection;
		
			import com.esri.solutions.flexviewer.AppEvent;		
			import mx.managers.IDragManager;
			import mx.managers.HistoryManager; 
			import mx.resources.ResourceManager;
			
			import flash.external.ExternalInterface;
			
			private var iDragManager:IDragManager;
			private var hist:HistoryManager; 
			
			private var _modulesAreReady:Boolean = false;			
			
			public var labelAlias:Object = new Object();
			public var staticLayerDefinitions:Hashtable = new Hashtable();
			public var printDetails:String = "";
			
			private function init():void{
				//the modules has been loaded
				SiteContainer.addEventListener(AppEvent.WIDGETS_PRELOADED, modulesAreReady);
				ExternalInterface.addCallback("isReady", isModulesReady);
				ExternalInterface.addCallback("setLocale", setLocale);
				ExternalInterface.addCallback("setMapPrintDetails", setPrintDetails);
				
				registerGlobalKeyHandler();
				
			}
			
			private function registerGlobalKeyHandler() :void
			{
				stage.addEventListener(KeyboardEvent.KEY_DOWN, handleKeyDown);
				
			}
			
			
			private function handleKeyDown(event:KeyboardEvent) :void
			{
				if ((event.shiftKey) && (event.keyCode == 27))
				{
					SiteContainer.dispatchEvent(new AppEvent(AppEvent.SET_MAP_NAVIGATION, false, false, null));	
				}
			}
			
		    private function modulesAreReady(e:AppEvent):void{
		    	_modulesAreReady = e.data;
		    	// tell javascript that all modules have loaded - and which flex instance (div id)
		    	var thisDivID:String = Application.application.parameters["divid"];
		    	if(_modulesAreReady){
		    		ExternalInterface.call("flexMapIsReady",_modulesAreReady,thisDivID);
		    	}
		    	var callbackFunction:String = Application.application.parameters["callbackfunction"];
		    	if(_modulesAreReady && callbackFunction != ""){
		    		ExternalInterface.call(callbackFunction,thisDivID);
		    	}
		    }
		    public function isModulesReady():Boolean{
		    	ExternalInterface.call("sendToJavaScript", _modulesAreReady);
		    	return _modulesAreReady;
		    }
		    
		     public function setLocale(locale:String):Boolean{
		     	var locales:Array = ResourceManager.getInstance().getLocales();		     	
		     	for(var i:int = 0; i < locales.length; i++){
					if(locales[i] == locale){
						ResourceManager.getInstance().localeChain = [locale];
				    	var widgets:Array = SiteContainer.getInstance().widgetManager.getLoadedWidgets().toArray();
				    	for (var j:int = 0; j < widgets.length; j++){
				    		BaseWidget(widgets[j]).updateLocale(locale);
					    }				    
				    	return true;							
					}
				}
		     	return false;
		    	
		    }
		    
		    private function setPrintDetails(details:String)
		    {
		    	printDetails = details;
		    	SiteContainer.dispatchEvent(new AppEvent(AppEvent.SET_PRINT_DETAILS,false,false,details));
		    }

		]]>
	</mx:Script>
	
	<SiteContainer id="container">	
	   <configManager> <ConfigManager/> </configManager>
       <uiManager>     <UIManager/>     </uiManager>
       <controller>    <Controller x="20" y="20"/>    </controller>
       <dataManager>   <DataManager/>   </dataManager>
       <widgetManager> <WidgetManagerDocked/> </widgetManager>
       <mapManager>  <MapManager/> </mapManager>      
	</SiteContainer>
	 <mx:Label  id="copyright_lbl" styleName="MapCopyright"  text="" includeInLayout="false" right="1" bottom="1" />
</mx:Application>
